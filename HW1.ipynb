{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "HW1.ipynb",
      "version": "0.3.2",
      "provenance": [],
      "collapsed_sections": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "accelerator": "GPU"
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/RajanMehta/Deep-Learning-Supervised/blob/master/HW1.ipynb%7F\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "metadata": {
        "id": "rUKzQb7HKw0B",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "Rajan Mehta\n",
        "\n",
        "ID: 2718747\n",
        "\n",
        "Data: We are using two awesome datasets for this assignment - US county-level census\n",
        "estimates from 2015 (American Community Survey) and summarized/aggregated data for the\n",
        "VIIRS satellite which takes a picture of the Earth every night at ~1:30 AM local time. For each\n",
        "county, I fit a function to calculate the percentiles of nighttime light (NTL) brightness per county.\n",
        "Background on county-level estimate data - your target variable is POPESTIMATE2015\n",
        "(county-level population estimate from 2015)\n",
        "https://www.census.gov/programs-surveys/acs/\n",
        "\n",
        "Background on VIIRS NTL data from July 2015 - you should use all columns starting with “Q”\n",
        "like Q0, Q25, Q50 etc.\n",
        "https://ncc.nesdis.noaa.gov/VIIRS/"
      ]
    },
    {
      "metadata": {
        "id": "KV7OaHeVcRz9",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "### Importing all necessary libraries"
      ]
    },
    {
      "metadata": {
        "id": "bBKegy25B7HL",
        "colab_type": "code",
        "colab": {}
      },
      "cell_type": "code",
      "source": [
        "import warnings\n",
        "warnings.filterwarnings('ignore')\n",
        "\n",
        "# Load pandas\n",
        "import pandas as pd\n",
        "\n",
        "# Load numpy\n",
        "import numpy as np\n",
        "\n",
        "# Load scikit's random forest classifier library\n",
        "from sklearn.ensemble import RandomForestRegressor\n",
        "from sklearn import linear_model\n",
        "from sklearn.ensemble import GradientBoostingRegressor\n",
        "\n",
        "# Set random seed\n",
        "np.random.seed(123)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "metadata": {
        "id": "uJtftUe6cbz3",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "### Uploading the dataset"
      ]
    },
    {
      "metadata": {
        "id": "ZLx2xR-E79Hz",
        "colab_type": "code",
        "outputId": "4d4c8e64-a057-4510-edf3-9b545d6d31f4",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 162
        }
      },
      "cell_type": "code",
      "source": [
        "url = \"https://drive.google.com/uc?export=download&id=1gInKyvS_rHHOrzHW_FWJbZBogW84-uVP\"\n",
        "\n",
        "df = pd.read_excel(url)\n",
        "df.head(3)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Month</th>\n",
              "      <th>Q0</th>\n",
              "      <th>Q1</th>\n",
              "      <th>Q2pt5</th>\n",
              "      <th>Q5</th>\n",
              "      <th>Q10</th>\n",
              "      <th>Q25</th>\n",
              "      <th>Q50</th>\n",
              "      <th>Q75</th>\n",
              "      <th>Q90</th>\n",
              "      <th>Q95</th>\n",
              "      <th>Q97pt5</th>\n",
              "      <th>Q99</th>\n",
              "      <th>Q100</th>\n",
              "      <th>STNAME</th>\n",
              "      <th>CTYNAME</th>\n",
              "      <th>POPESTIMATE2015</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>JUL</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>Maryland</td>\n",
              "      <td>Allegany</td>\n",
              "      <td>72498</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>JUL</td>\n",
              "      <td>0.02</td>\n",
              "      <td>0.08</td>\n",
              "      <td>0.09</td>\n",
              "      <td>0.11</td>\n",
              "      <td>0.13</td>\n",
              "      <td>0.18</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0.72</td>\n",
              "      <td>1.89</td>\n",
              "      <td>4.110</td>\n",
              "      <td>10.37625</td>\n",
              "      <td>18.9790</td>\n",
              "      <td>95.500000</td>\n",
              "      <td>Alabama</td>\n",
              "      <td>Russell</td>\n",
              "      <td>58847</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>JUL</td>\n",
              "      <td>0.10</td>\n",
              "      <td>0.15</td>\n",
              "      <td>0.16</td>\n",
              "      <td>0.18</td>\n",
              "      <td>0.20</td>\n",
              "      <td>0.23</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0.46</td>\n",
              "      <td>0.82</td>\n",
              "      <td>1.363</td>\n",
              "      <td>3.11650</td>\n",
              "      <td>7.0808</td>\n",
              "      <td>42.669998</td>\n",
              "      <td>Georgia</td>\n",
              "      <td>Meriwether</td>\n",
              "      <td>21186</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "  Month    Q0    Q1  Q2pt5    Q5   Q10   Q25  Q50   Q75   Q90    Q95  \\\n",
              "0   JUL  0.00  0.00   0.00  0.00  0.00  0.00  0.0  0.00  0.00  0.000   \n",
              "1   JUL  0.02  0.08   0.09  0.11  0.13  0.18  0.3  0.72  1.89  4.110   \n",
              "2   JUL  0.10  0.15   0.16  0.18  0.20  0.23  0.3  0.46  0.82  1.363   \n",
              "\n",
              "     Q97pt5      Q99       Q100    STNAME     CTYNAME  POPESTIMATE2015  \n",
              "0   0.00000   0.0000   0.000000  Maryland    Allegany            72498  \n",
              "1  10.37625  18.9790  95.500000   Alabama     Russell            58847  \n",
              "2   3.11650   7.0808  42.669998   Georgia  Meriwether            21186  "
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 2
        }
      ]
    },
    {
      "metadata": {
        "id": "AeVXg8ybcnVM",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "### How the dataset looks"
      ]
    },
    {
      "metadata": {
        "id": "LKREZYyZ8lCW",
        "colab_type": "code",
        "outputId": "65c94348-4afc-4e38-f476-ac82f7081843",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 162
        }
      },
      "cell_type": "code",
      "source": [
        "df.head(3)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Month</th>\n",
              "      <th>Q0</th>\n",
              "      <th>Q1</th>\n",
              "      <th>Q2pt5</th>\n",
              "      <th>Q5</th>\n",
              "      <th>Q10</th>\n",
              "      <th>Q25</th>\n",
              "      <th>Q50</th>\n",
              "      <th>Q75</th>\n",
              "      <th>Q90</th>\n",
              "      <th>Q95</th>\n",
              "      <th>Q97pt5</th>\n",
              "      <th>Q99</th>\n",
              "      <th>Q100</th>\n",
              "      <th>STNAME</th>\n",
              "      <th>CTYNAME</th>\n",
              "      <th>POPESTIMATE2015</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>JUL</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>Maryland</td>\n",
              "      <td>Allegany</td>\n",
              "      <td>72498</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>JUL</td>\n",
              "      <td>0.02</td>\n",
              "      <td>0.08</td>\n",
              "      <td>0.09</td>\n",
              "      <td>0.11</td>\n",
              "      <td>0.13</td>\n",
              "      <td>0.18</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0.72</td>\n",
              "      <td>1.89</td>\n",
              "      <td>4.110</td>\n",
              "      <td>10.37625</td>\n",
              "      <td>18.9790</td>\n",
              "      <td>95.500000</td>\n",
              "      <td>Alabama</td>\n",
              "      <td>Russell</td>\n",
              "      <td>58847</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>JUL</td>\n",
              "      <td>0.10</td>\n",
              "      <td>0.15</td>\n",
              "      <td>0.16</td>\n",
              "      <td>0.18</td>\n",
              "      <td>0.20</td>\n",
              "      <td>0.23</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0.46</td>\n",
              "      <td>0.82</td>\n",
              "      <td>1.363</td>\n",
              "      <td>3.11650</td>\n",
              "      <td>7.0808</td>\n",
              "      <td>42.669998</td>\n",
              "      <td>Georgia</td>\n",
              "      <td>Meriwether</td>\n",
              "      <td>21186</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "  Month    Q0    Q1  Q2pt5    Q5   Q10   Q25  Q50   Q75   Q90    Q95  \\\n",
              "0   JUL  0.00  0.00   0.00  0.00  0.00  0.00  0.0  0.00  0.00  0.000   \n",
              "1   JUL  0.02  0.08   0.09  0.11  0.13  0.18  0.3  0.72  1.89  4.110   \n",
              "2   JUL  0.10  0.15   0.16  0.18  0.20  0.23  0.3  0.46  0.82  1.363   \n",
              "\n",
              "     Q97pt5      Q99       Q100    STNAME     CTYNAME  POPESTIMATE2015  \n",
              "0   0.00000   0.0000   0.000000  Maryland    Allegany            72498  \n",
              "1  10.37625  18.9790  95.500000   Alabama     Russell            58847  \n",
              "2   3.11650   7.0808  42.669998   Georgia  Meriwether            21186  "
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 3
        }
      ]
    },
    {
      "metadata": {
        "id": "kSAShlp0cz_c",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "### Preprocessing the data"
      ]
    },
    {
      "metadata": {
        "id": "_6TqaebwjFyL",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "#### keeping only the NTL columns and Population Estimate column"
      ]
    },
    {
      "metadata": {
        "id": "RRB8MjSfc3Mh",
        "colab_type": "code",
        "colab": {}
      },
      "cell_type": "code",
      "source": [
        "STNAME = df['STNAME']\n",
        "CTYNAME = df['CTYNAME']\n",
        "\n",
        "df.drop(['Month','STNAME','CTYNAME'], axis=1, inplace=True)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "metadata": {
        "id": "o5IA4C_6js4K",
        "colab_type": "code",
        "outputId": "0fe28e25-b15f-47da-f05f-f17f2ae36b8b",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 142
        }
      },
      "cell_type": "code",
      "source": [
        "df.head(3)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Q0</th>\n",
              "      <th>Q1</th>\n",
              "      <th>Q2pt5</th>\n",
              "      <th>Q5</th>\n",
              "      <th>Q10</th>\n",
              "      <th>Q25</th>\n",
              "      <th>Q50</th>\n",
              "      <th>Q75</th>\n",
              "      <th>Q90</th>\n",
              "      <th>Q95</th>\n",
              "      <th>Q97pt5</th>\n",
              "      <th>Q99</th>\n",
              "      <th>Q100</th>\n",
              "      <th>POPESTIMATE2015</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>72498</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>0.02</td>\n",
              "      <td>0.08</td>\n",
              "      <td>0.09</td>\n",
              "      <td>0.11</td>\n",
              "      <td>0.13</td>\n",
              "      <td>0.18</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0.72</td>\n",
              "      <td>1.89</td>\n",
              "      <td>4.110</td>\n",
              "      <td>10.37625</td>\n",
              "      <td>18.9790</td>\n",
              "      <td>95.500000</td>\n",
              "      <td>58847</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0.10</td>\n",
              "      <td>0.15</td>\n",
              "      <td>0.16</td>\n",
              "      <td>0.18</td>\n",
              "      <td>0.20</td>\n",
              "      <td>0.23</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0.46</td>\n",
              "      <td>0.82</td>\n",
              "      <td>1.363</td>\n",
              "      <td>3.11650</td>\n",
              "      <td>7.0808</td>\n",
              "      <td>42.669998</td>\n",
              "      <td>21186</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "     Q0    Q1  Q2pt5    Q5   Q10   Q25  Q50   Q75   Q90    Q95    Q97pt5  \\\n",
              "0  0.00  0.00   0.00  0.00  0.00  0.00  0.0  0.00  0.00  0.000   0.00000   \n",
              "1  0.02  0.08   0.09  0.11  0.13  0.18  0.3  0.72  1.89  4.110  10.37625   \n",
              "2  0.10  0.15   0.16  0.18  0.20  0.23  0.3  0.46  0.82  1.363   3.11650   \n",
              "\n",
              "       Q99       Q100  POPESTIMATE2015  \n",
              "0   0.0000   0.000000            72498  \n",
              "1  18.9790  95.500000            58847  \n",
              "2   7.0808  42.669998            21186  "
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 5
        }
      ]
    },
    {
      "metadata": {
        "id": "Zzz_Uc5TXRC2",
        "colab_type": "code",
        "outputId": "2de56bf5-4f56-4c05-b3b5-a51211d6c01d",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1436
        }
      },
      "cell_type": "code",
      "source": [
        "df.hist(figsize=(16, 20), bins=50, xlabelsize=8, ylabelsize=8)   #looking at distribution of all variables."
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[<matplotlib.axes._subplots.AxesSubplot object at 0x7fc4982b6c88>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7fc495c956d8>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7fc495cdb080>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7fc495bd59e8>],\n",
              "       [<matplotlib.axes._subplots.AxesSubplot object at 0x7fc495bf9390>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7fc495b59cf8>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7fc495b8e6a0>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7fc495bbf080>],\n",
              "       [<matplotlib.axes._subplots.AxesSubplot object at 0x7fc495bbf0b8>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7fc495ad0358>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7fc495af5cc0>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7fc495aa4668>],\n",
              "       [<matplotlib.axes._subplots.AxesSubplot object at 0x7fc495a4afd0>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7fc495a77978>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7fc495a24320>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7fc4959cac88>]],\n",
              "      dtype=object)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 23
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAA6UAAARqCAYAAACwONOpAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAADl0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uIDMuMC4yLCBo\ndHRwOi8vbWF0cGxvdGxpYi5vcmcvOIA7rQAAIABJREFUeJzs3Xt0VOW9//FPwkwCCUlITJyEOYBC\ne9RqcZRwK4gFLCKCUFHxIDSiYCzVVoqRCJQkWJBAEbRSCiI3dZVTvKFSYBWkWqlJBRs9aeUXjRrA\nBJsbECAhCdm/PzjMIVxyn3lmJu/XWi6Tmcl+vg8z32Q+ez+zd5BlWZYAAAAAADAg2HQBAAAAAID2\ni1AKAAAAADCGUAoAAAAAMIZQCgAAAAAwhlAKAAAAADCGUAoAAAAAMMZmugBfc9VVV6l79+7q0KGD\nLMtS586d9fjjj2vgwIGSJMuytHHjRr366quqqamRZVnq37+/HnvsMcXExEiSJk+erK+++kqdO3eW\nZVnq0KGDJkyYoKSkpAvuP9ekSZM0adIklZWVacGCBcrNzZUk2Ww2JSUl6Z577tHvfvc7vfXWW5Kk\noqIiRUREuLezYsUKffLJJ3rrrbe0fv16HTp0SMOHD9cDDzygWbNm1Rvr/vvv14EDB/Tuu++6b6ut\nrdXo0aPVtWtXrV271n37ww8/rK+//lqS9NVXX7n/fTp37qxXX3210fnk5+crPT1dJSUlstlsevTR\nRzVixAhJ0ocffqjFixfr5MmT6tq1q55++mnFx8dLkkpLS/X444/r0KFD+vOf/+zebmpqqj744IN6\n4y1evFi9e/du8vMM+JqNGzdq8+bNF/29UlhYqDlz5qiwsFBhYWGaNWuWBgwYYLpkoF1rqGcl6c03\n31RGRobS09M1duxYw9UC7U9Le7Sh96bwIAv1/Od//qdVVFTk/n7v3r1W3759rdLSUsuyLGvp0qXW\n+PHj3Y+pqamxFi9ebI0aNcqqrKy0LMuyJk2aZL355pvubfz73/+2hg4dar333nsXvf98jz32mLV4\n8WLr9OnTlmVZ1ldffWX169fP+vjjj+s97mLbee2116ykpCTLsizr4MGD1sCBA61bbrnFvS3Lsqzi\n4mJr6NCh1tChQ+v97LvvvmulpaVZd9xxh3X48OEm/fs0ZT6333679eqrr1qWZVn79++3XC6XdezY\nMevEiRPWgAEDrNzcXMuyLGvDhg3WQw89ZFmWZZWXl1sjR460Fi5caN1yyy31tjdr1izrtddeu+R4\ngL9ZtmzZRX+vjB492qqqqrIeeOABa926dZZlWda//vUv6wc/+IH79w0A72usZ1etWmUlJydbP/7x\njxv8+wjAM1raow29N4VnsXy3EX369FH37t31j3/8Q0eOHNGGDRu0ZMkS9x4Tm82mlJQUhYaGasuW\nLRfdRlxcnEaOHKk9e/Y0acy8vDz17t1bwcFnnp4rrrhCb7/9douOBHbs2FHdu3fX3r173bdt27bN\nfeT3XG+88YZGjhypUaNGXXIuzXX69GlNnz7dvQfqqquukt1u16FDh5SVlaVu3brp2muvlSSNHz9e\ne/bs0fHjxxUUFKQVK1Zo2LBhbVIH4KuOHj2q9evXX/T3it1u16ZNm5Sdna177rlHknTNNdcoISFB\n2dnZJssG2q3Gevatt95S//79tXLlSoWHhxuuFmh/WtOjDb03hWcRSpugtrZWISEh+uSTT5SQkKAr\nr7zygscMGzZMf//73xvdRlMMGTJE6enpWrVqlf71r3+prq5Ol19+uTp06NCi+keOHKl33nnH/f3W\nrVs1cuTIeo85cuSI9u/fr/79+2v06NF6++23WzTW+Tp06KBRo0bJZjuzUvyTTz6RdCZof/311+rW\nrZv7seHh4erSpYsOHDigqKgo9ezZ85LbfeeddzR+/HiNGjVKv//972VZVpvUC3hbTk6O4uPjL/l7\n5a9//auio6MVFhbmvr179+766quvvFkmgP/VWM9mZ2fr+uuvV1BQkIHqALSmRxt6bwrPIpQ24r33\n3lNJSYluvPFGHTlyxL0O/XyXXXaZjh49etH7Dh48qO3bt+tHP/qR+7YlS5Zo5MiR9f47ePCgJCkl\nJUUzZszQBx98oHvuuUeDBw/WihUrVFdX16I5jBgxQu+++65qamr0zTffqKqq6oJG3bp1q0aMGKGg\noCA5nU5FRUW5P9PaFA3N56yioiLNnDlTc+fOVadOnVRZWanQ0NB6jwkNDdXJkycbHKtv37667bbb\n9Mc//lEvvvii3nzzzTY7sgt427Fjxxr8vVJTU9OiPgHgGY317LFjx7xcEYBztaZHW/reFK3HiY4u\nYvLkye4THTmdTr3wwgsKDw9XdHS0/v3vf1/0Z0pLS3XZZZe5v1+yZIlWrlwpy7IUGRmp1NTUestv\nU1JSLnnig+DgYN1zzz265557dPLkSf3lL3/RU089pcsuu0z33ntvs+cTFRWl6667Th988IG++OIL\n3XbbbRc85o033tCXX36pTZs2SZJqamr05ptv6rrrrmvSGA3NR5K+/PJLPfTQQ0pOTtYdd9whSQoL\nC9OpU6fqPa6qqqrR5U7jx493f52QkKAJEyZo9+7dGjduXJNqBXyJw+Fo8PdKhw4dLton5x45BeA9\njfUsJ0QBzGpNj7b0vSlajyOlF/HSSy9p+/bt2rFjh9auXatrrrlGknTDDTfo6NGj2r9//wU/s3v3\n7nqf00xJSXFvY/PmzRo1alSTxj5x4oR2797t/j4sLEyjRo3S2LFjlZeX1+I53X777dqxY4e2b99+\nQS35+fk6fvy4Pv74Y+3du1d79+7V7t27tX37dtXU1LR4zLO+/fZbTZ06VTNnztTdd9/tvr1nz571\nlkNUVFTo6NGj6tGjR4Pby8vLU3V1tfv72tpa9/JgwN9cffXVKi0tveTvlTvuuEPl5eU6ceKE+/aC\nggJ95zvf8WaZAP5XYz3bt29fA1UBOKs1PdrS96ZoPUJpM0REROjhhx9WSkqKe2lqbW2tli5dqrq6\nuiYHz4YEBQXpySef1Ouvv+6+raSkRHv27GnVH7rhw4fr73//uzp06FBvrbwkvf7667rlllvq3RYT\nE6MrrrhC77//fovHPCstLU1JSUkXHKHt37+/CgsL3SdhWr9+vYYOHdroEaB58+Zp48aNks58mH3L\nli364Q9/2Oo6ARMiIyN1//33X/T3ytnLNA0aNEgvvfSSpDMnYSguLla/fv1Mlg20W4317MVWIwHw\nntb0aEvfm6L1OLzUTA8++KBCQ0P105/+VLW1te7rHq1bt67JJzKS/m9577l69+6txYsXa/369Vq6\ndKl+//vfS5Lsdrvuu+++Vv2hCwsL0/XXX6/vf//79W4/ffq03nrrLf32t7+94GduueUWbdmyRcOH\nD2/xfGbOnKndu3frq6++0h/+8Af3fU888YSGDRumZ555RvPnz1dlZaW6d++uRYsWSZLeffddLV68\nWFVVVSopKdHIkSPlcDi0YcMGZWZmat68edq8ebOCg4M1duxYjR49uiX/LIBP+MUvfqHOnTsrKSlJ\nwcHBqq6uVt++fbVx40bZbDZlZGRo1qxZeu2119S5c2c9++yzzfp9A6BtNdazDz74oL755hsVFRXp\n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\nCKfNZlNKSorsdrveeust9e/fXytXrlR4eHi9n83KylK3bt107bXXSpLGjx+vPXv26Pjx49q+fbtG\njRqlyMhIBQUFafz48ewpAtpYY/37xhtvaPr06e7VDVdddZXsdrsOHTpksmygXWhNf2ZnZ2vMmDFa\ntGiRbr31Vg0bNkw5OTn65z//qfnz52vHjh2aMWOGyekB7U5T3jPDNxBK/VBOTo7i4+N15ZVXXnDf\nsGHDlJ2dreuvv15BQUEX3P/111/XWzIUHh6uLl266MCBA/r666/VvXt3933dunXTl19+6ZlJAO1U\nY/27d+9ejRo1yr2M6JNPPpEkXXHFFZKk48ePa/r06Ro5cqQefPBB5efne612INC1tj/z8/PVu3dv\n7dixQz/96U+Vnp6ua6+9VpMmTdKtt96qZcuWSaKPAW9pyntmSVq8eLHGjBmj8ePHa9euXd4uEyKU\n+qVjx465Pzd6vssuu0zHjh275M9WVlYqNDS03m2hoaE6efKkKisr631+tGPHjqqsrGybogFIal7/\nFhUVaebMmZo7d646deqk8PBwjR49WrNnz9af/vQnDRo0SNOnT1dtba23ygcCWmv6U5LCwsJ02223\nSZJGjBihzz777IK/o/Qx4D1N6elRo0bpvvvu09tvv60nn3xSKSkpKigo8HKlIJT6IYfDoX//+98X\nva+0tNS9POFiwsLCdOrUqXq3VVVVKTw8XJ06dVJ1dbX79srKSoWFhbVN0QAkNb1/v/zyS02ePFnJ\nycm64447JEnR0dGaN2+e/uM//kPBwcGaMmWKSkpK9PXXX3urfCCgtaY/Jbk//nL2a0kX7CimjwHv\naUpPP/744+rfv78kKTExUf369dMHH3zgzTIhQqlfuvrqq1VaWqr9+/dfcN/u3bvVt2/fS/5sz549\ndeDAAff3FRUVOnr0qHr06KGePXvW2zNUUFCg73znO21bPNDONaV/v/32W02dOlUzZ87U3Xff7b7/\n6NGjOnjwYL2fqaurq3fGQAAt15r+lKQjR464vz569KgkqUuXLvUeQx8D3tNYT99www36/PPP691+\n+vRp2e12b5WI/0Uo9UORkZG6//77lZKS4v7DVltbq6VLl6q2tta9dOhi+vfvr8LCQu3du1fSmUvA\nDB061L3kaOvWrSopKVFtba02btyo22+/3StzAtqLpvRvWlqakpKSLujl//mf/1FSUpLKysokSX/8\n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\n",
            "text/plain": [
              "<Figure size 1152x1440 with 16 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "metadata": {
        "id": "LABAq3JQk-tV",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "#### convert all negative values to 0 (this is sensor error!)"
      ]
    },
    {
      "metadata": {
        "id": "Pn6BI08ElIew",
        "colab_type": "code",
        "colab": {}
      },
      "cell_type": "code",
      "source": [
        "df[df < 0] = 0"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "metadata": {
        "id": "lXFiX3leqVu_",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "#### split data into train and test sets"
      ]
    },
    {
      "metadata": {
        "id": "d9q0n2VBqbzN",
        "colab_type": "code",
        "colab": {}
      },
      "cell_type": "code",
      "source": [
        "np.random.seed(123)\n",
        "mask = np.random.rand(len(df)) < 0.8         # 2500 random numbers each between 0 to 1. Condition creates a boolean array which can be used to filter train-test sets\n",
        "\n",
        "train = df[mask]\n",
        "test = df[~mask]"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "metadata": {
        "id": "NQ_O7EdIq-yt",
        "colab_type": "code",
        "outputId": "bb24b675-2dc7-44b9-d523-ee81f6227f31",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 51
        }
      },
      "cell_type": "code",
      "source": [
        "print('Total rows in training data: ', len(train))  #the cross-validation will be performed on the training data\n",
        "print('Total rows in test data: ', len(test))       #the test sample will be used to test the best model chosen after cross-validation"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Total rows in training data:  1986\n",
            "Total rows in test data:  514\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "metadata": {
        "id": "GBAXG7OB23dm",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "#### Cross Validation Scores"
      ]
    },
    {
      "metadata": {
        "id": "V3a_iKTh3B9C",
        "colab_type": "code",
        "colab": {}
      },
      "cell_type": "code",
      "source": [
        "import random\n",
        "random.seed(123)\n",
        "\n",
        "def data_split(dataset, folds):\n",
        "\tdataset_split = list()\n",
        "\tdataset_copy = list(dataset)\n",
        "\tfold_size = int(len(dataset) / folds)\n",
        "\tfor i in range(folds):\n",
        "\t\tfold = list()\n",
        "\t\twhile len(fold) < fold_size:\n",
        "\t\t\tindex = random.randrange(len(dataset_copy))  #rows are randomly picked to be put in each fold\n",
        "\t\t\tfold.append(dataset_copy.pop(index))\n",
        "\t\tdataset_split.append(fold)\n",
        "\treturn dataset_split\n",
        "\n",
        "def poprow(my_array,pr):\n",
        "    \"\"\" row popping in numpy arrays\n",
        "    Input: my_array - NumPy array, pr: row index to pop out\n",
        "    Output: [new_array,popped_row] \"\"\"\n",
        "    i = pr\n",
        "    pop = my_array[i]\n",
        "    new_array = np.vstack((my_array[:i],my_array[i+1:]))\n",
        "    return [new_array,pop]\n",
        "\n",
        "def absolute_percentage_error(y_true, y_pred):           #calculates APE\n",
        "    y_true, y_pred = np.array(y_true), np.array(y_pred)\n",
        "    return (np.abs((y_true - y_pred) / y_true)) * 100\n",
        "\n",
        "def absolute_error(y_true, y_pred):                      #calculates AE\n",
        "    y_true, y_pred = np.array(y_true), np.array(y_pred)\n",
        "    return np.abs((y_true - y_pred))\n",
        "\n",
        "def cross_validation(splits, clf):         #Input: splitted data from data_split() function and classifier. Output: array of mean of MAPE and MAE\n",
        "  MAPE=[]\n",
        "  MAE = []\n",
        "\n",
        "  splits = np.array(splits)\n",
        "  for i in range(10):\n",
        "    [subtrain, subtest] = poprow( splits, i )\n",
        "\n",
        "    subtrain = subtrain.tolist()\n",
        "    subtrain_final = [e for sl in subtrain for e in sl]\n",
        "\n",
        "    subtrain_df = pd.DataFrame(subtrain_final, columns=train.columns)\n",
        "    subtest_df = pd.DataFrame(subtest, columns=train.columns)\n",
        "\n",
        "    y_train = subtrain_df['POPESTIMATE2015'].values\n",
        "    X_train = subtrain_df.drop(['POPESTIMATE2015'], axis=1)\n",
        "\n",
        "    y_test = subtest_df['POPESTIMATE2015'].values\n",
        "    X_test = subtest_df.drop(['POPESTIMATE2015'], axis=1)\n",
        "\n",
        "    clf.fit(X_train, y_train)\n",
        "    y_pred = clf.predict(X_test)\n",
        "\n",
        "    MAPE.append( np.mean(absolute_percentage_error(y_test, y_pred)) )\n",
        "    MAE.append( np.mean(absolute_error(y_test, y_pred)) )\n",
        "\n",
        "  return MAPE, MAE"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "metadata": {
        "id": "SEpYJZmP5cSH",
        "colab_type": "code",
        "colab": {}
      },
      "cell_type": "code",
      "source": [
        "splits = data_split(train.values, folds=10)\n",
        "\n",
        "RF = RandomForestRegressor()\n",
        "LR = linear_model.LinearRegression()\n",
        "GBM = GradientBoostingRegressor()\n",
        "\n",
        "RF_MAPE, RF_MAE = cross_validation(splits, RF)\n",
        "LR_MAPE, LR_MAE = cross_validation(splits, LR)\n",
        "GBM_MAPE, GBM_MAE = cross_validation(splits, GBM)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "metadata": {
        "id": "vKGBl0XznNvj",
        "colab_type": "code",
        "outputId": "a442d798-bd9f-4e7e-954c-b5482d1ddc06",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 421
        }
      },
      "cell_type": "code",
      "source": [
        "validation_scores = pd.DataFrame(\n",
        "    {'RF_MAPE': RF_MAPE,\n",
        "     'RF_MAE': RF_MAE,\n",
        "     'LR_MAPE': LR_MAPE,\n",
        "     'LR_MAE': LR_MAE,\n",
        "     'GBM_MAPE': GBM_MAPE,\n",
        "     'GBM_MAE': GBM_MAE\n",
        "    })\n",
        "\n",
        "validation_scores.loc['Mean'] = validation_scores.mean()\n",
        "validation_scores.loc['Std Dev'] = validation_scores.std()\n",
        "\n",
        "validation_scores      #cross-validation scores of each fold\n",
        "                       #Mean of cross-validation scores of all folds for all algorithms"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>GBM_MAE</th>\n",
              "      <th>GBM_MAPE</th>\n",
              "      <th>LR_MAE</th>\n",
              "      <th>LR_MAPE</th>\n",
              "      <th>RF_MAE</th>\n",
              "      <th>RF_MAPE</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>144977.543192</td>\n",
              "      <td>635.008391</td>\n",
              "      <td>149991.036689</td>\n",
              "      <td>636.264461</td>\n",
              "      <td>140369.867379</td>\n",
              "      <td>624.777403</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>95232.155356</td>\n",
              "      <td>922.058939</td>\n",
              "      <td>96905.865275</td>\n",
              "      <td>931.846728</td>\n",
              "      <td>92595.763542</td>\n",
              "      <td>933.829144</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>94140.906617</td>\n",
              "      <td>658.472431</td>\n",
              "      <td>111582.763900</td>\n",
              "      <td>638.590462</td>\n",
              "      <td>101966.774454</td>\n",
              "      <td>657.938210</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>111364.223091</td>\n",
              "      <td>546.606307</td>\n",
              "      <td>128620.205352</td>\n",
              "      <td>796.942924</td>\n",
              "      <td>134870.331919</td>\n",
              "      <td>525.121143</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>81167.794134</td>\n",
              "      <td>550.184111</td>\n",
              "      <td>84965.126507</td>\n",
              "      <td>557.653824</td>\n",
              "      <td>94052.690880</td>\n",
              "      <td>568.024397</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>85679.709258</td>\n",
              "      <td>645.507686</td>\n",
              "      <td>93860.881465</td>\n",
              "      <td>610.130166</td>\n",
              "      <td>87709.847996</td>\n",
              "      <td>631.246190</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>83876.063171</td>\n",
              "      <td>507.509311</td>\n",
              "      <td>119334.793687</td>\n",
              "      <td>869.672980</td>\n",
              "      <td>73817.735909</td>\n",
              "      <td>542.375071</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>174971.960082</td>\n",
              "      <td>783.581519</td>\n",
              "      <td>167643.045156</td>\n",
              "      <td>818.612440</td>\n",
              "      <td>170880.132833</td>\n",
              "      <td>725.328273</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>82132.704975</td>\n",
              "      <td>631.570283</td>\n",
              "      <td>95981.470456</td>\n",
              "      <td>982.552594</td>\n",
              "      <td>85852.349237</td>\n",
              "      <td>512.162365</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>123823.304848</td>\n",
              "      <td>798.388342</td>\n",
              "      <td>148897.386504</td>\n",
              "      <td>737.289852</td>\n",
              "      <td>122832.316764</td>\n",
              "      <td>803.397818</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Mean</th>\n",
              "      <td>107736.636472</td>\n",
              "      <td>667.888732</td>\n",
              "      <td>119778.257499</td>\n",
              "      <td>757.955643</td>\n",
              "      <td>110494.781091</td>\n",
              "      <td>652.420001</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Std Dev</th>\n",
              "      <td>29896.353899</td>\n",
              "      <td>123.406868</td>\n",
              "      <td>26777.629254</td>\n",
              "      <td>137.774807</td>\n",
              "      <td>29017.832577</td>\n",
              "      <td>127.927177</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "               GBM_MAE    GBM_MAPE         LR_MAE     LR_MAPE         RF_MAE  \\\n",
              "0        144977.543192  635.008391  149991.036689  636.264461  140369.867379   \n",
              "1         95232.155356  922.058939   96905.865275  931.846728   92595.763542   \n",
              "2         94140.906617  658.472431  111582.763900  638.590462  101966.774454   \n",
              "3        111364.223091  546.606307  128620.205352  796.942924  134870.331919   \n",
              "4         81167.794134  550.184111   84965.126507  557.653824   94052.690880   \n",
              "5         85679.709258  645.507686   93860.881465  610.130166   87709.847996   \n",
              "6         83876.063171  507.509311  119334.793687  869.672980   73817.735909   \n",
              "7        174971.960082  783.581519  167643.045156  818.612440  170880.132833   \n",
              "8         82132.704975  631.570283   95981.470456  982.552594   85852.349237   \n",
              "9        123823.304848  798.388342  148897.386504  737.289852  122832.316764   \n",
              "Mean     107736.636472  667.888732  119778.257499  757.955643  110494.781091   \n",
              "Std Dev   29896.353899  123.406868   26777.629254  137.774807   29017.832577   \n",
              "\n",
              "            RF_MAPE  \n",
              "0        624.777403  \n",
              "1        933.829144  \n",
              "2        657.938210  \n",
              "3        525.121143  \n",
              "4        568.024397  \n",
              "5        631.246190  \n",
              "6        542.375071  \n",
              "7        725.328273  \n",
              "8        512.162365  \n",
              "9        803.397818  \n",
              "Mean     652.420001  \n",
              "Std Dev  127.927177  "
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 29
        }
      ]
    },
    {
      "metadata": {
        "id": "-s6dhK-eeICJ",
        "colab_type": "code",
        "outputId": "6c24b37c-839f-45e7-cbfc-0f27803653fa",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 119
        }
      },
      "cell_type": "code",
      "source": [
        "print('MAE for Gradient Boosting Regressor', validation_scores['GBM_MAE'].mean())\n",
        "print('MAPE for Gradient Boosting Regressor', validation_scores['GBM_MAPE'].mean() )\n",
        "print('MAE for Linear Regressor', validation_scores['LR_MAE'].mean())\n",
        "print('MAPE for Linear Regressor', validation_scores['LR_MAPE'].mean())\n",
        "print('MAE for Random Forest Regressor', validation_scores['RF_MAE'].mean())\n",
        "print('MAPE for Random Forest Regressor', validation_scores['RF_MAPE'].mean())"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "MAE for Gradient Boosting Regressor 101249.94625782636\n",
            "MAPE for Gradient Boosting Regressor 622.5152432648341\n",
            "MAE for Linear Regressor 112028.2051453824\n",
            "MAPE for Linear Regressor 706.2739067595443\n",
            "MAE for Random Forest Regressor 103705.03538169648\n",
            "MAPE for Random Forest Regressor 608.7122658751993\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "metadata": {
        "id": "Nr4chiydtZYb",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "### Prediction on test sample with best model"
      ]
    },
    {
      "metadata": {
        "id": "U49eIvaW2VlD",
        "colab_type": "code",
        "outputId": "78776065-e331-4a45-e98b-0e2b0ec91372",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 142
        }
      },
      "cell_type": "code",
      "source": [
        "test.head(3)    #this test sample was taken aside before performing cross-validation. This data is entirely new for the model."
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Q0</th>\n",
              "      <th>Q1</th>\n",
              "      <th>Q2pt5</th>\n",
              "      <th>Q5</th>\n",
              "      <th>Q10</th>\n",
              "      <th>Q25</th>\n",
              "      <th>Q50</th>\n",
              "      <th>Q75</th>\n",
              "      <th>Q90</th>\n",
              "      <th>Q95</th>\n",
              "      <th>Q97pt5</th>\n",
              "      <th>Q99</th>\n",
              "      <th>Q100</th>\n",
              "      <th>POPESTIMATE2015</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>0.03</td>\n",
              "      <td>0.09</td>\n",
              "      <td>0.10</td>\n",
              "      <td>0.12</td>\n",
              "      <td>0.13</td>\n",
              "      <td>0.17</td>\n",
              "      <td>0.25</td>\n",
              "      <td>0.44</td>\n",
              "      <td>0.84</td>\n",
              "      <td>1.67</td>\n",
              "      <td>4.340000</td>\n",
              "      <td>13.411400</td>\n",
              "      <td>443.970001</td>\n",
              "      <td>48170</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.08</td>\n",
              "      <td>0.17</td>\n",
              "      <td>0.26</td>\n",
              "      <td>0.390000</td>\n",
              "      <td>0.818000</td>\n",
              "      <td>23.850000</td>\n",
              "      <td>11338</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>37</th>\n",
              "      <td>0.08</td>\n",
              "      <td>0.15</td>\n",
              "      <td>0.17</td>\n",
              "      <td>0.19</td>\n",
              "      <td>0.22</td>\n",
              "      <td>0.32</td>\n",
              "      <td>0.58</td>\n",
              "      <td>1.57</td>\n",
              "      <td>5.66</td>\n",
              "      <td>11.34</td>\n",
              "      <td>21.526001</td>\n",
              "      <td>38.419198</td>\n",
              "      <td>117.559998</td>\n",
              "      <td>149374</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "      Q0    Q1  Q2pt5    Q5   Q10   Q25   Q50   Q75   Q90    Q95     Q97pt5  \\\n",
              "6   0.03  0.09   0.10  0.12  0.13  0.17  0.25  0.44  0.84   1.67   4.340000   \n",
              "21  0.00  0.00   0.00  0.00  0.00  0.00  0.00  0.08  0.17   0.26   0.390000   \n",
              "37  0.08  0.15   0.17  0.19  0.22  0.32  0.58  1.57  5.66  11.34  21.526001   \n",
              "\n",
              "          Q99        Q100  POPESTIMATE2015  \n",
              "6   13.411400  443.970001            48170  \n",
              "21   0.818000   23.850000            11338  \n",
              "37  38.419198  117.559998           149374  "
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 31
        }
      ]
    },
    {
      "metadata": {
        "id": "ZsdT9pZ8sLX_",
        "colab_type": "code",
        "colab": {}
      },
      "cell_type": "code",
      "source": [
        "y_train = df['POPESTIMATE2015'].values\n",
        "X_train = df.drop(['POPESTIMATE2015'], axis=1)\n",
        "\n",
        "y_test = df['POPESTIMATE2015'].values\n",
        "X_test = df.drop(['POPESTIMATE2015'], axis=1)\n",
        "\n",
        "clf = GradientBoostingRegressor()\n",
        "clf.fit(X_train, y_train)\n",
        "\n",
        "y_pred = clf.predict(test.drop(['POPESTIMATE2015'], axis=1))"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "metadata": {
        "id": "5EKLgS9v2ufi",
        "colab_type": "code",
        "outputId": "d34b559f-d87c-4ea2-a554-9f40964b5e8e",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 179
        }
      },
      "cell_type": "code",
      "source": [
        "test['prediction'] = y_pred\n",
        "test['STNAME'] = STNAME\n",
        "test['CTYNAME'] = CTYNAME\n",
        "test['APE'] = absolute_percentage_error(test['POPESTIMATE2015'], y_pred)\n",
        "test['AE'] = absolute_error(test['POPESTIMATE2015'], y_pred)\n",
        "\n",
        "test.head(3)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Q0</th>\n",
              "      <th>Q1</th>\n",
              "      <th>Q2pt5</th>\n",
              "      <th>Q5</th>\n",
              "      <th>Q10</th>\n",
              "      <th>Q25</th>\n",
              "      <th>Q50</th>\n",
              "      <th>Q75</th>\n",
              "      <th>Q90</th>\n",
              "      <th>Q95</th>\n",
              "      <th>Q97pt5</th>\n",
              "      <th>Q99</th>\n",
              "      <th>Q100</th>\n",
              "      <th>POPESTIMATE2015</th>\n",
              "      <th>prediction</th>\n",
              "      <th>STNAME</th>\n",
              "      <th>CTYNAME</th>\n",
              "      <th>APE</th>\n",
              "      <th>AE</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>0.03</td>\n",
              "      <td>0.09</td>\n",
              "      <td>0.10</td>\n",
              "      <td>0.12</td>\n",
              "      <td>0.13</td>\n",
              "      <td>0.17</td>\n",
              "      <td>0.25</td>\n",
              "      <td>0.44</td>\n",
              "      <td>0.84</td>\n",
              "      <td>1.67</td>\n",
              "      <td>4.340000</td>\n",
              "      <td>13.411400</td>\n",
              "      <td>443.970001</td>\n",
              "      <td>48170</td>\n",
              "      <td>-1530.903009</td>\n",
              "      <td>Texas</td>\n",
              "      <td>Navarro</td>\n",
              "      <td>103.178125</td>\n",
              "      <td>49700.903009</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.08</td>\n",
              "      <td>0.17</td>\n",
              "      <td>0.26</td>\n",
              "      <td>0.390000</td>\n",
              "      <td>0.818000</td>\n",
              "      <td>23.850000</td>\n",
              "      <td>11338</td>\n",
              "      <td>26423.285494</td>\n",
              "      <td>Colorado</td>\n",
              "      <td>Rio Grande</td>\n",
              "      <td>133.050675</td>\n",
              "      <td>15085.285494</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>37</th>\n",
              "      <td>0.08</td>\n",
              "      <td>0.15</td>\n",
              "      <td>0.17</td>\n",
              "      <td>0.19</td>\n",
              "      <td>0.22</td>\n",
              "      <td>0.32</td>\n",
              "      <td>0.58</td>\n",
              "      <td>1.57</td>\n",
              "      <td>5.66</td>\n",
              "      <td>11.34</td>\n",
              "      <td>21.526001</td>\n",
              "      <td>38.419198</td>\n",
              "      <td>117.559998</td>\n",
              "      <td>149374</td>\n",
              "      <td>129396.485380</td>\n",
              "      <td>Mississippi</td>\n",
              "      <td>Rankin</td>\n",
              "      <td>13.374158</td>\n",
              "      <td>19977.514620</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "      Q0    Q1  Q2pt5    Q5   Q10   Q25   Q50   Q75   Q90    Q95     Q97pt5  \\\n",
              "6   0.03  0.09   0.10  0.12  0.13  0.17  0.25  0.44  0.84   1.67   4.340000   \n",
              "21  0.00  0.00   0.00  0.00  0.00  0.00  0.00  0.08  0.17   0.26   0.390000   \n",
              "37  0.08  0.15   0.17  0.19  0.22  0.32  0.58  1.57  5.66  11.34  21.526001   \n",
              "\n",
              "          Q99        Q100  POPESTIMATE2015     prediction       STNAME  \\\n",
              "6   13.411400  443.970001            48170   -1530.903009        Texas   \n",
              "21   0.818000   23.850000            11338   26423.285494     Colorado   \n",
              "37  38.419198  117.559998           149374  129396.485380  Mississippi   \n",
              "\n",
              "       CTYNAME         APE            AE  \n",
              "6      Navarro  103.178125  49700.903009  \n",
              "21  Rio Grande  133.050675  15085.285494  \n",
              "37      Rankin   13.374158  19977.514620  "
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 33
        }
      ]
    },
    {
      "metadata": {
        "id": "lp93qTJO6xYs",
        "colab_type": "code",
        "colab": {}
      },
      "cell_type": "code",
      "source": [
        "# creating new dataframe consisting of data of CA, TX and FL\n",
        "\n",
        "STFilter = test[ (test['STNAME'] == 'California') | (test['STNAME'] == 'Texas') | (test['STNAME'] == 'Florida')]"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "metadata": {
        "id": "Ek_Yol1YVtax",
        "colab_type": "code",
        "colab": {}
      },
      "cell_type": "code",
      "source": [
        "STFilter.reset_index(inplace=True)    #so that the index is in order 0,1,2,3..."
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "metadata": {
        "id": "hiPncIkTHJIg",
        "colab_type": "code",
        "outputId": "39f590b4-f189-407f-ca7e-0a870a5dc99a",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 459
        }
      },
      "cell_type": "code",
      "source": [
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "fig, (ax1, ax2) = plt.subplots(1, 2, figsize=(15,7))\n",
        "\n",
        "sns.boxplot(x=\"STNAME\", y=\"AE\", data=STFilter, ax=ax1)\n",
        "sns.boxplot(x=\"STNAME\", y=\"APE\", data=STFilter, ax=ax2)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7fc4952cbeb8>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 36
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAA48AAAGpCAYAAAAtAwMNAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAADl0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uIDMuMC4yLCBo\ndHRwOi8vbWF0cGxvdGxpYi5vcmcvOIA7rQAAIABJREFUeJzs3X10lPWd///X5GYaAzMmk51xhUXa\niAtqQywHuUmIlIVQS08VF8MmMdgb3JYKCntS7rIIWIqgmC7SUmVBJRsaCAYU5PANafuDnFpi1nS2\nFKvRxmobIyYzmJA7kgnJ/P6wmRIgXEQzM0nm+TjH4zWfXPO53hdzyIfXXJ/PdZm8Xq9XAAAAAABc\nRViwCwAAAAAADHyERwAAAACAIcIjAAAAAMAQ4REAAAAAYIjwCAAAAAAwFBHsAgYal6sp2CUAAALA\nbrcEu4RBhfERAEJHb2MkVx4BAAAAAIYIjwAAAAAAQ4RHAAAAAIAhwiMAAAAAwBDhEQAAAABgiPAI\nAAAAADBEeAQAAAAAGCI8AgAAAAAMER4BAAAAAIYigl0AAAC4svLyci1dulS33HKLJOmf//mf9dBD\nD2nFihXq7OyU3W7Xli1bZDabdfjwYeXl5SksLEzz589XWlqaOjo6tGrVKn300UcKDw/Xpk2bNGrU\nKFVWVmr9+vWSpLFjx+rxxx8P4lkCAAYLrjwCADCATZo0Sfn5+crPz9djjz2mbdu2KTMzUwUFBRo9\nerSKiorU2tqq7du3a/fu3crPz1deXp4aGhp05MgRWa1W7d27V4sWLVJubq4kaePGjcrJydG+ffvU\n3Nys0tLSIJ8lAGAwIDwCADCIlJeXa+bMmZKkGTNmqKysTKdOnVJCQoIsFouioqI0YcIEOZ1OlZWV\nKTU1VZKUlJQkp9Mpj8ejmpoajR8/vkcfAAAY8eu01XfffVcPP/ywvv3tbysrK8vX/pvf/EYPPfSQ\n3nnnHUnql6k2u3btUnFxsUwmk5YsWaLp06erqalJ2dnZampqUnR0tHJzcxUTE+PPUwYAoF9VVVVp\n0aJFOnfunJYsWaLz58/LbDZLkuLi4uRyueR2u2Wz2Xzvsdlsl7WHhYXJZDLJ7XbLarX69u3uw0hs\nbLQiIsL7+ewAAIOJ38Jja2urNmzYoKlTp/Zob29v13//93/Lbrf79tu+fbuKiooUGRmp+++/X6mp\nqTp+/LisVqtyc3P12muvKTc3V1u3bvVNtRk/fryys7NVWlqq+Ph4HT161Df9JjMzU9OmTVNeXp4m\nTZqkhx56SIWFhdq5c6eWL1/ur1MGBqXKyrckSePG3RbkSgBc6otf/KKWLFmir3/966qurtaDDz6o\nzs5O38+9Xu8V39eX9t72vVR9fes17TcU8XsSQKix2y1XbPfbtFWz2aydO3fK4XD0aH/uueeUmZnp\n+9a0P6balJeXKyUlRWazWTabTSNHjlRVVVWPPpiWA1zZoUMHdOjQgWCXAeAKbrjhBs2ZM0cmk0k3\n3XST/uEf/kHnzp1TW1ubJKm2tlYOh0MOh0Nut9v3vrq6Ol9791XFjo4Oeb1e2e12NTQ0+Pbt7gO9\n4/ckAHzKb1ceIyIiFBHRs/v3339flZWVWrp0qbZs2SJJ/TLVJiYmxrCPuLg41dXVGdbNtByEktOn\nT+udd96WJH388QdKSEgIckUALnb48GG5XC4tXLhQLpdLZ8+e1b/+67/q2LFjuvfee1VSUqKUlBQl\nJiZqzZo1amxsVHh4uJxOp3JyctTc3Kzi4mKlpKTo+PHjmjx5siIjIxUfH6+KigpNnDhRJSUlWrBg\nQbBPdcCqrHzL93uysvItrj4CCGkBfVTHpk2btGbNmqvu0x9TbZiWA1ybvLz8HtsrVz4WxGqAwOpt\nSs5A8i//8i/64Q9/qF//+tfq6OjQ+vXrdeutt2rlypUqLCzUiBEjNHfuXEVGRio7O1sLFy6UyWTS\n4sWLZbFYNGfOHJ08eVIZGRkym83avHmzJCknJ0dr165VV1eXEhMTlZSUFOQzHbguvuJ46NABwiOA\nkBaw8FhbW6s///nP+uEPfyjp0yk1WVlZeuSRRy6banPHHXf4ptqMGzfOcKqNw+HQ+++/f8V2l8sl\ni8XCtBwAwKAzfPhwPffcc5e1v/jii5e13X333br77rt7tHXfcO5SY8aMUUFBQf8VCgAICQF7VMcN\nN9ygX/3qV9q/f7/2798vh8OhPXv2KDExUadPn1ZjY6NaWlrkdDo1ceJEJScnq7i4WJKuONVGkm+6\nzpQpU3TixAl5PB7V1taqrq5OY8aM6dFH974A/u7ee+ddcRsA8Cl+TwLA3/ntyuObb76pJ598UjU1\nNYqIiNCxY8f005/+9LJHZURFRfXLVJv58+crKytLJpNJ69evV1hYmBYsWKDly5crMzNTVqvVt84S\nwKfGjbtNY8fe6tsGAPTE70kA+DuT91oXA4YIl6sp2CUAAcUt6BGqBsOax4EklMdHfk8CCDW9jZGE\nx0uE8uAIAKGE8Ng3jI8AEDoC/pxHAAAAAMDQQXgEAAAAABgiPAIAAAAADBEeAQAAAACGCI8AAAAA\nAEOERwAAAACAIcIjAAAAAMAQ4REAAAAAYIjwCAAAAAAwRHgEAAAAABgiPAIAAAAADBEeAQAAAACG\nCI8AAAAAAEOERwAAAACAIcIjAAAAAMAQ4REAAAAAYIjwCAAAAAAwRHgEAAAAABgiPAIAAAAADBEe\nAQAAAACGCI8AAAAAAEOERwAAAACAIcIjAAAAAMAQ4REAAAAAYIjwCAAAAAAwRHgEAAAAABgiPAIA\nAAAADBEeAQAAAACGCI8AAAAAAEOERwAAAACAIcIjAAAAAMAQ4REAAAAAYIjwCAAAAAAwRHgEAAAA\nABgiPAIAAAAADBEeAQAAAACGCI8AAAAAAEOERwAAAACAIcIjAAAAAMAQ4REAAAAAYMiv4fHdd9/V\nrFmztGfPHknSmTNn9O1vf1tZWVn69re/LZfLJUk6fPiw5s2bp7S0NL300kuSpI6ODmVnZysjI0NZ\nWVmqrq6WJFVWVio9PV3p6elat26d71i7du3S/fffr7S0NJWWlkqSmpqa9L3vfU8ZGRlauHChGhoa\n/Hm6AAAAADBk+S08tra2asOGDZo6daqvbevWrZo/f7727Nmj1NRUvfjii2ptbdX27du1e/du5efn\nKy8vTw0NDTpy5IisVqv27t2rRYsWKTc3V5K0ceNG5eTkaN++fWpublZpaamqq6t19OhRFRQUaMeO\nHdq0aZM6OzuVl5enSZMmae/evZo9e7Z27tzpr9MFAAAAgCHNb+HRbDZr586dcjgcvrZ169bpa1/7\nmiQpNjZWDQ0NOnXqlBISEmSxWBQVFaUJEybI6XSqrKxMqampkqSkpCQ5nU55PB7V1NRo/PjxkqQZ\nM2aorKxM5eXlSklJkdlsls1m08iRI1VVVdWjj+59AQAAAAB9F+G3jiMiFBHRs/vo6GhJUmdnpwoK\nCrR48WK53W7ZbDbfPjabTS6Xq0d7WFiYTCaT3G63rFarb9+4uDi5XC7FxMQY9hEXF6e6ujrDumNj\noxUREf7ZTxwAAAAAhiC/hcfedHZ2asWKFZoyZYqmTp2qV199tcfPvV7vFd93pfb+2PdS9fWt17Qf\nAGBws9stwS4BAIBBJeB3W129erVGjx6tJUuWSJIcDofcbrfv53V1dXI4HHI4HL4b6nR0dMjr9cpu\nt/e46U1tba1v34v7uLi9u4/uNgAAAABA3wU0PB4+fFiRkZF69NFHfW2JiYk6ffq0Ghsb1dLSIqfT\nqYkTJyo5OVnFxcWSpOPHj2vy5MmKjIxUfHy8KioqJEklJSVKSUnRlClTdOLECXk8HtXW1qqurk5j\nxozp0Uf3vgAAAACAvjN5r3U+Zx+9+eabevLJJ1VTU6OIiAjdcMMNOnv2rL7whS9o+PDhkqSbb75Z\n69evV3FxsZ5//nmZTCZlZWXpnnvuUWdnp9asWaMPPvhAZrNZmzdv1o033qiqqiqtXbtWXV1dSkxM\n1OrVqyVJ+fn5evXVV2UymbRs2TJNnTpVLS0tWr58uRoaGmS1WrVlyxZZLFefpuRyNfnjjwMAMMAw\nbbVvGB8BIHT0Nkb6LTwOVgyOABAaCI99w/gIAKGjtzEy4GseAQAAAACDD+ERAAAAAGCI8AgAAAAA\nMER4BAAAAAAYIjwCAAAAAAwRHgEAAAAAhgiPAAAAAABDhEcAAAAAgCHCIwAAA1xbW5tmzZqlgwcP\n6syZM1qwYIEyMzO1dOlSeTweSdLhw4c1b948paWl6aWXXpIkdXR0KDs7WxkZGcrKylJ1dbUkqbKy\nUunp6UpPT9e6deuCdl4AgMGF8AgAwAD37LPP6vrrr5ckbdu2TZmZmSooKNDo0aNVVFSk1tZWbd++\nXbt371Z+fr7y8vLU0NCgI0eOyGq1au/evVq0aJFyc3MlSRs3blROTo727dun5uZmlZaWBvP0AACD\nBOERAIAB7L333lNVVZW++tWvSpLKy8s1c+ZMSdKMGTNUVlamU6dOKSEhQRaLRVFRUZowYYKcTqfK\nysqUmpoqSUpKSpLT6ZTH41FNTY3Gjx/fow8AAIxEBLsAAADQuyeffFKPPfaYXnnlFUnS+fPnZTab\nJUlxcXFyuVxyu92y2Wy+99hstsvaw8LCZDKZ5Ha7ZbVafft292EkNjZaERHh/XlqAIBBhvAIAMAA\n9corr+iOO+7QqFGjrvhzr9f7udt72/dS9fWt17QfAGDws9stV2wnPAIAMECdOHFC1dXVOnHihD7+\n+GOZzWZFR0erra1NUVFRqq2tlcPhkMPhkNvt9r2vrq5Od9xxhxwOh1wul8aNG6eOjg55vV7Z7XY1\nNDT49u3uAwAAI6x5BABggNq6dasOHDig/fv3Ky0tTQ8//LCSkpJ07NgxSVJJSYlSUlKUmJio06dP\nq7GxUS0tLXI6nZo4caKSk5NVXFwsSTp+/LgmT56syMhIxcfHq6KiokcfAAAY4cojAACDyCOPPKKV\nK1eqsLBQI0aM0Ny5cxUZGans7GwtXLhQJpNJixcvlsVi0Zw5c3Ty5EllZGTIbDZr8+bNkqScnByt\nXbtWXV1dSkxMVFJSUpDPCgAwGJi817rYIUS4XE3BLgEAEAC9refAlTE+AkDo6G2MZNoqAAAAAMAQ\n4REAAAAAYIjwCAAAAAAwRHgEAAAAABgiPAIAAAAADBEeAQAAAACGCI8AAAAAAEOERwAAAACAIcIj\nAAAAAMAQ4REAAAAAYIjwCAAAAAAwRHgEAAAAABgiPAIAAAAADBEeAQAAAACGCI8AAAAAAEOERwAA\nAACAIcIjAAAAAMAQ4REAAAAAYIjwCAAAAAAwRHgEAAAAABgiPAIAAAAADBEeAQAAAACGCI8AAAAA\nAEN+DY/vvvuuZs2apT179kiSzpw5owULFigzM1NLly6Vx+ORJB0+fFjz5s1TWlqaXnrpJUlSR0eH\nsrOzlZGRoaysLFVXV0uSKisrlZ6ervT0dK1bt853rF27dun+++9XWlqaSktLJUlNTU363ve+p4yM\nDC1cuFANDQ3+PF0AAAAAGLL8Fh5bW1u1YcMGTZ061de2bds2ZWZmqqCgQKNHj1ZRUZFaW1u1fft2\n7d69W/n5+crLy1NDQ4OOHDkiq9WqvXv3atGiRcrNzZUkbdy4UTk5Odq3b5+am5tVWlqq6upqHT16\nVAUFBdqxY4c2bdqkzs5O5eXladKkSdq7d69mz56tnTt3+ut0AQAAAGBI81t4NJvN2rlzpxwOh6+t\nvLxcM2fOlCTNmDFDZWVlOnXqlBISEmSxWBQVFaUJEybI6XSqrKxMqampkqSkpCQ5nU55PB7V1NRo\n/PjxPfooLy9XSkqKzGazbDabRo4cqaqqqh59dO8LAAAAAOi7CL91HBGhiIie3Z8/f15ms1mSFBcX\nJ5fLJbfbLZvN5tvHZrNd1h4WFiaTySS32y2r1erbt7uPmJgYwz7i4uJUV1dnWHdsbLQiIsI/+4kD\nAAAAwBDkt/BoxOv1fu72/tj3UvX1rde0HwBgcLPbLcEuAQCAQSWgd1uNjo5WW1ubJKm2tlYOh0MO\n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\nhgiPAAAAAABDhEcAAAAAgCHCIwAAAADAEOERAAAAAGCI8AgAAAAAMER4BAAAAAAYIjwCAAAAAAwR\nHgEAAAAAhgiPAAAAAABDEYE+4FNPPaXf/e53unDhgr7//e8rISFBK1asUGdnp+x2u7Zs2SKz2azD\nhw8rLy9PYWFhmj9/vtLS0tTR0aFVq1bpo48+Unh4uDZt2qRRo0apsrJS69evlySNHTtWjz/+uCRp\n165dKi4ulslk0pIlSzR9+vRAny4AAAAADAkBDY+vv/66/vSnP6mwsFD19fW67777NHXqVGVmZurr\nX/+6fvKTn6ioqEhz587V9u3bVVRUpMjISN1///1KTU3V8ePHZbValZubq9dee025ubnaunWrNm7c\nqJycHI0fP17Z2dkqLS1VfHy8jh49qn379qm5uVmZmZmaNm2awsPDA3nKAAAAADAkBHTa6p133qln\nnnlGkmS1WnX+/HmVl5dr5syZkqQZM2aorKxMp06dUkJCgiwWi6KiojRhwgQ5nU6VlZUpNTVVkpSU\nlCSn0ymPx6OamhqNHz++Rx/l5eVKSUmR2WyWzWbTyJEjVVVVFcjTBQAAAIAhI6BXHsPDwxUdHS1J\nKioq0l133aXXXntNZrNZkhQXFyeXyyW32y2bzeZ7n81mu6w9LCxMJpNJbrdbVqvVt293HzExMVfs\nY+zYsVetMTY2WhERXJ1E6AgP//Q7JLvdEuRKEGinT5+WJCUkJAS5EgAAMBgEfM2jJP3qV79SUVGR\nXnjhBc2ePdvX7vV6r7h/X9r72sel6utbr2k/YKjo7OySJLlcTUGuBIGWl5cvSVq58rEgVxIcfGEC\nAEDfBPxuq7/5zW/03HPPaefOnbJYLIqOjlZbW5skqba2Vg6HQw6HQ2632/eeuro6X7vL5ZIkdXR0\nyOv1ym63q6Ghwbdvb310twMApMrKt/TOO2/rnXfeVmXlW8EuBwAADAIBDY9NTU166qmntGPHDsXE\nxEj6dO3isWPHJEklJSVKSUlRYmKiTp8+rcbGRrW0tMjpdGrixIlKTk5WcXGxJOn48eOaPHmyIiMj\nFR8fr4qKih59TJkyRSdOnJDH41Ftba3q6uo0ZsyYQJ4uAAxYhw4duOI2AABAbwI6bfXo0aOqr6/X\nsmXLfG2bN2/WmjVrVFhYqBEjRmju3LmKjIxUdna2Fi5cKJPJpMWLF8tisWjOnDk6efKkMjIyZDab\ntXnzZklSTk6O1q5dq66uLiUmJiopKUmSNH/+fGVlZclkMmn9+vUKC+OxlgAAAADwWZi817oYMESw\n7guhZvnyRyVJW7ZsC3IlCKTKyrf01FM/liStWLFG48bdFuSKAo81j33D+AgAoaO3MTIoN8wBAATX\nuHG3aezYW33bAAAARgiPABCi7r13XrBLAAAAgwjhEQBCFFccAQBAX7Dm8RKs6cC1eOKJ9aqv/yTY\nZfSL7vOIjbUFuZL+ERtrU07O+mCXgUGANY99w/gIAKGDNY9AP6qv/0RnP3Er7LrB/1eoK+zT74/q\nzzcY7DnwdZ2/EOwSAAAAhqzB/y9fIEjCrotQ7N03BbsMXKS++K/BLgEAAGDI4sGHAAAAAABDhEcA\nAAAAgCHCIwAAAADAEOERAAAAAGCI8AgAAAAAMER4hCSpsvItVVa+FewyAAAAAAxQPKoDkqRDhw5I\nksaNuy3IlQAAAAAYiLjyCFVWvqV33nlb77zzNlcfAQAAAFwR4RG+q46XbgMAAABAN8IjAAAAAMAQ\n4RG69955V9wGAAAAgG7cMAcaN+42jR17q28bAAAAAC5FeIQkrjgCAAAAuDrCIyRxxREAAADA1bHm\nEQAAAABgiCuPwGfQ0tKirvYLqi/+a7BLwUW6zl9QS1dLsMsAAAAYkrjyCAAAAAAwxJVH4DMYNmyY\nPGEdir37pmCXgovUF/9Vw64bFuwyAAAAhiSuPAIAAAAADBEeIUkqKTmqkpKjwS4DAAAAwADFtFVI\nkg4efEmSNHv2nCBXAgDAwFJZ+ZYkHmsFAFx5hEpKjsrjaZfH087VRwAALnHo0AEdOnQg2GUAQNAR\nHuG76njpNgAAoa6y8i29887beuedt31XIAEgVDFtFbpwoeOK2wCCY//+X+iNN8r9fpyWlk+fiTls\nmH/vUHvnnZM1f/4Dfj0G4C8XX3E8dOgAU1cBhDTCIxQX9w9yuep82wB698QT61Vf/4lfj9HS0iKP\np92vx5Ckrq4uSfL7sU6c+P/8HoZjY23KyVnv12MAABDqCI+DgL+vQnR0eHzb7e1tWr78Ub8diysQ\nGOzq6z/RJ2fdGh7mv1n/kX/7z9/a/vb/KH8f6G9rqv2l+W8hGPCHe++dp6ee+rFvGwBCGeERiow0\nX3EbwOW6p3oOBVF+DMCBNpQ+Fwws48bdplGjbvJtA0AoIzwOAvPnP+D3q3XLli2SJG3Zss2vxwEA\nAAAwOBEeIYkrjsC1GjZsmCI97cq63hbsUvA3e859IrOfb/qD0FVZ+Zaqq//q2+bqI4BQRngEPqOu\n8xdUX/zXYJfxuXV5OiVJYebwIFfy+XWdvyBdF+wqAAwl3G01dHU/moXPHPg7wuPnEIi7LgZK93n4\n82Y5geTvOy/Gxg6dq071bZ9+9rHXxQS5kn5wXWA+m+auLu05N/j/7rf97UYzg33tY3NXl4bO30gA\nA0X3FweER+DvCI+fQ339Jzp79qxMkYP/UodXn/7j8ZPG1iBX8vl5O877/RhD6ZEA3V8YsN712gyl\nLw5a/valkXmQn5NNQ+tzwcBy3XXXXXEbQ1tl5Vt65523fdsESOBThMfPYSjd3c8UPrTWPA6lzwYD\nC18cAKHlD3/4/RW3MbQxXRm4MsIjAAAYlPz9HGRJ6rroOaJdXV08CxkIAax37d3gXugSZMOG0N39\nvJ0eeTs9wS6j3wylzwYA/OWJJ57Qv/3bvyk9PV1/+MMfgl3OgPSFL3zhitsY2u69d94VtxEaDh06\n0OPqM/5uyF95fOKJJ3Tq1CmZTCbl5ORo/Pjx/db3UFpjU1/fJkmKtUYHuZL+ED0kPptAfKMuBe5m\nSXyjDgws//u//6u//OUvKiws1HvvvaecnBwVFhb2W/9D5aZyw4db1N7e7tv2pzfeKPf7731/31Bu\nqBg37jaNHXurbxuhg/WuVzekw6O/B8ah9MuXtU+hy2zmm/SBhi8OEAhlZWWaNWuWJOnmm2/WuXPn\n1NzcrOHDh/dL/x9+WK22Nv/fwCyQzp51B7uEzy0Q9wTYv/8XKin5f349xsXTif3tu9/NDMhxwvx8\n5+vZs7/u19/FgfjcpcB+9k899eOAHGcwffZDOjz6e2AMlED8Q5J/RA488+c/wJ8V/IovDkKb2+3W\n7bff7ntts9nkcrn6bYyMioqSx9PeL331pqvLK8nr12MElklhYSa/HiEqKsqv/QMY2oZ0ePwsA2Ns\nbLQiIgbWw9Kvu86s8HD/fiPRPZj4+zjXXWeW3e7faT/AYLd48SJJi4JdBkKM13v1ENbX8TE//38+\nb0mGXnjhBf32t7/1+3Gam5slye9fPicnJ+u73/2uX48RCIsXL/rb7zGEkqHyuZ8+fVo5OTmSPl3+\nlpCQEOSKBpYhHR4vZTQwSlJ9/cB7zuE3v5mmb34zLdhl9BuXqynYJQBAyH+R5XA45Hb/fRpmXV2d\n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\njnDYdXd3c+edd+Lz+fjiiy8IBAJcuHCBhoYGMjMzefnll/nuu+9Gspxx68EHH+SXX37h1KlTAPT1\n9VFWVobD4WD27NmYTCZOnjxJb28vfr//X/tasGABZ8+eBfqnbvz888+kpqbGtD8ej4fExETcbjdn\nz54lEAjcWGEyLObOnUt7e3t4qtW5c+ci3jj3dykpKfzwww/4/X48Hg+tra1A//kgJSWFUCjEyZMn\ndYxlzFE+jh3KSImFMjJ2uvM4jmRlZZGRkUFOTg6hUIjc3FwCgQAlJSVUVFSQlJTElClTaGxsJDc3\nl/z8fJKTk7HZbLzyyitYLBbq6upwuVwYjUa2bNky0iWNS0ajkbfffpvi4mL279/PpEmTsFgsOJ1O\nNm3aRG5uLsuXL2fZsmXs2rXrX/vKzMxkwYIFPPPMMwSDQZ577jni4+Nj2p8NGzawfv165s6di91u\np6KigkceeYRZs2b9hyplqMTHx1NYWIjdbsdoNPLAAw+QmZnJmTNnBqw7ffp0rFYr69atIzk5mfvu\nuw+AnJwcHA4Hc+bMwWaz8eKLL3L69Gm9EETGDOXj2KGMlFgoI2NnCP39Xq2IiIiIiIjIIDRtVURE\nRERERKLS4FFERERERESi0uBRREREREREotLgUURERERERKLS4FFERERERESi0k91iIwiTU1NVFZW\nYjQa8Xq9JCcns2rVqvAP37a1tZGUlMS0adOYNWsWr7/+Ovfccw/bt28nPz8/3I/NZqOkpITk5GQA\nrly5wrJly9i+fTt5eXkR6/l8Pt5///2I/VixYgULFy6ktLSU559/nvPnzw947fjevXuZMWPGcH0V\nIiIiEZSRIsNPg0eRUcLv91NYWMhHH30UDqGysjI6OzvDwWiz2cjPz8disYS3S0hI4OjRo1itVhIT\nEwft++jRo8yfP5+6urqIYARwu918//33mM1moP9Hs43GyEkLdrudp59+eshqFRERiYUyUuTm0LRV\nkVHC5/Px559/4vV6w207duxg8+bN/7rd5MmTKSgooLS09B/Xqa2tZefOnXi9XlpaWiKWLV++nNra\n2vDnuro6Hn300RusQkREZOgpI0VuDg0eRUaJ2267jYKCAqxWKxs3buStt97i0qVL17VtdnY2XV1d\nnDlzZsCyr776imAwyOLFi7FardTV1UUsf/zxxzl+/DjBYBCv18u5c+dYsmTJkNQkIiIyFJSRIjeH\nBo8io0heXh6nTp3iqaee4vLly6xduxan03ld2xYVFVFSUkIwGIxoP3LkCKtXr8ZgMPDkk0/yySef\nRFy5nTZtGmlpaTQ1NXHixAkeeughJkyYENHHgQMHsNls4b9du3b951pFRERioYwUGX565lFkFPF6\nvdx+++1kZ2eTnZ3NyvuBakQAAAFsSURBVJUrKS0tZcOGDVG3vffee8nKyuLQoUPhNo/Hw6effkpi\nYiKNjY0A9PX1ceLECaxWa3i9J554gvr6enp6eti2bRt+vz+ibz3PISIiI00ZKTL8dOdRZJT48ssv\nycnJwePxhNs6OjpITU297j6effZZampq6OrqAuDYsWNkZWXR0NBAfX099fX17N69e8C0nIcffpjW\n1lYuX75MRkbG0BQkIiIyRJSRIjeH7jyKjBJLly7lp59+YuPGjdxyyy2EQiESEhIoLi6+7j6mTp1K\nXl4eRUVFQP90nK1bt0as89hjj1FaWkpnZ2e4bdKkSSxdupSEhIRB+z1w4AAffvhhRFtBQQGLFi26\n7n0TERG5UcpIkZvDEAqFQiO9EyIiIiIiIvL/TdNWRUREREREJCoNHkVERERERCQqDR5FREREREQk\nKg0eRUREREREJCoNHkVERERERCQqDR5FREREREQkKg0eRUREREREJKq/AKefXyCNbIDXAAAAAElF\nTkSuQmCC\n",
            "text/plain": [
              "<Figure size 1080x504 with 2 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "metadata": {
        "id": "iwocfqUwn9tF",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "The graphs are not proper because of few extreme outliers. So, I will remove those outliers towards the end and see the change in graph."
      ]
    },
    {
      "metadata": {
        "id": "Hgh27H3pLgbZ",
        "colab_type": "code",
        "outputId": "626e4cbe-5134-4c86-e9f7-dbbd074bc576",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1599
        }
      },
      "cell_type": "code",
      "source": [
        "# list of the 50 worst predicted counties in the US as per the value of APE\n",
        "\n",
        "test.sort_values(by='APE' ,axis=0, ascending=False).head(50)[ ['APE','STNAME','CTYNAME'] ]"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>APE</th>\n",
              "      <th>STNAME</th>\n",
              "      <th>CTYNAME</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>1841</th>\n",
              "      <td>49349.630114</td>\n",
              "      <td>Texas</td>\n",
              "      <td>Loving</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>333</th>\n",
              "      <td>14210.057012</td>\n",
              "      <td>Nebraska</td>\n",
              "      <td>Banner</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>174</th>\n",
              "      <td>11606.740004</td>\n",
              "      <td>Idaho</td>\n",
              "      <td>Clark</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1826</th>\n",
              "      <td>11045.632640</td>\n",
              "      <td>South Dakota</td>\n",
              "      <td>Jones</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>904</th>\n",
              "      <td>7177.162705</td>\n",
              "      <td>South Dakota</td>\n",
              "      <td>Sully</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1804</th>\n",
              "      <td>4529.724327</td>\n",
              "      <td>South Dakota</td>\n",
              "      <td>Miner</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>617</th>\n",
              "      <td>4336.986454</td>\n",
              "      <td>South Dakota</td>\n",
              "      <td>Faulk</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1193</th>\n",
              "      <td>4266.918806</td>\n",
              "      <td>North Dakota</td>\n",
              "      <td>Burke</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1755</th>\n",
              "      <td>4263.194355</td>\n",
              "      <td>South Dakota</td>\n",
              "      <td>Sanborn</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2185</th>\n",
              "      <td>4166.760118</td>\n",
              "      <td>South Dakota</td>\n",
              "      <td>McPherson</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1781</th>\n",
              "      <td>4103.652738</td>\n",
              "      <td>Nebraska</td>\n",
              "      <td>Greeley</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>774</th>\n",
              "      <td>4083.029748</td>\n",
              "      <td>North Dakota</td>\n",
              "      <td>Kidder</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1145</th>\n",
              "      <td>3668.578550</td>\n",
              "      <td>North Dakota</td>\n",
              "      <td>McIntosh</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>488</th>\n",
              "      <td>3398.013936</td>\n",
              "      <td>Kansas</td>\n",
              "      <td>Decatur</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>512</th>\n",
              "      <td>3366.019906</td>\n",
              "      <td>South Dakota</td>\n",
              "      <td>Douglas</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1670</th>\n",
              "      <td>3349.659731</td>\n",
              "      <td>Kansas</td>\n",
              "      <td>Jewell</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>517</th>\n",
              "      <td>3331.150491</td>\n",
              "      <td>Nebraska</td>\n",
              "      <td>Brown</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1362</th>\n",
              "      <td>3201.610443</td>\n",
              "      <td>Kansas</td>\n",
              "      <td>Rush</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1727</th>\n",
              "      <td>3087.368576</td>\n",
              "      <td>Nevada</td>\n",
              "      <td>Esmeralda</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1756</th>\n",
              "      <td>3035.669863</td>\n",
              "      <td>Alaska</td>\n",
              "      <td>Petersburg Borough</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>704</th>\n",
              "      <td>3017.516991</td>\n",
              "      <td>South Dakota</td>\n",
              "      <td>Jackson</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>157</th>\n",
              "      <td>2957.887257</td>\n",
              "      <td>Alaska</td>\n",
              "      <td>Aleutians East Borough</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>773</th>\n",
              "      <td>2921.763368</td>\n",
              "      <td>South Dakota</td>\n",
              "      <td>Hanson</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>602</th>\n",
              "      <td>2749.259472</td>\n",
              "      <td>Nebraska</td>\n",
              "      <td>Webster</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>296</th>\n",
              "      <td>2707.818541</td>\n",
              "      <td>South Dakota</td>\n",
              "      <td>Clark</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1573</th>\n",
              "      <td>2695.543924</td>\n",
              "      <td>Missouri</td>\n",
              "      <td>Mercer</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1471</th>\n",
              "      <td>2632.346927</td>\n",
              "      <td>Colorado</td>\n",
              "      <td>Kiowa</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>293</th>\n",
              "      <td>2546.583229</td>\n",
              "      <td>North Dakota</td>\n",
              "      <td>Sargent</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1079</th>\n",
              "      <td>2543.847742</td>\n",
              "      <td>Minnesota</td>\n",
              "      <td>Lake of the Woods</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>295</th>\n",
              "      <td>2530.931027</td>\n",
              "      <td>Idaho</td>\n",
              "      <td>Adams</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>119</th>\n",
              "      <td>2518.810024</td>\n",
              "      <td>Missouri</td>\n",
              "      <td>Knox</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1315</th>\n",
              "      <td>2459.842573</td>\n",
              "      <td>South Dakota</td>\n",
              "      <td>Edmunds</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>426</th>\n",
              "      <td>2135.457890</td>\n",
              "      <td>North Dakota</td>\n",
              "      <td>Dunn</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2351</th>\n",
              "      <td>2075.104329</td>\n",
              "      <td>New York</td>\n",
              "      <td>Hamilton</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2126</th>\n",
              "      <td>2017.485671</td>\n",
              "      <td>Nebraska</td>\n",
              "      <td>Furnas</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2471</th>\n",
              "      <td>1888.225195</td>\n",
              "      <td>Texas</td>\n",
              "      <td>Motley</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>257</th>\n",
              "      <td>1875.229877</td>\n",
              "      <td>Kansas</td>\n",
              "      <td>Rooks</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1720</th>\n",
              "      <td>1789.508913</td>\n",
              "      <td>Kansas</td>\n",
              "      <td>Phillips</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1772</th>\n",
              "      <td>1777.374452</td>\n",
              "      <td>North Dakota</td>\n",
              "      <td>Ransom</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1354</th>\n",
              "      <td>1737.258173</td>\n",
              "      <td>Kansas</td>\n",
              "      <td>Washington</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>349</th>\n",
              "      <td>1691.262389</td>\n",
              "      <td>Iowa</td>\n",
              "      <td>Audubon</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1269</th>\n",
              "      <td>1624.539148</td>\n",
              "      <td>South Dakota</td>\n",
              "      <td>Hamlin</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>85</th>\n",
              "      <td>1616.726638</td>\n",
              "      <td>Kansas</td>\n",
              "      <td>Sherman</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2038</th>\n",
              "      <td>1612.130315</td>\n",
              "      <td>North Dakota</td>\n",
              "      <td>McHenry</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1984</th>\n",
              "      <td>1522.789970</td>\n",
              "      <td>Kansas</td>\n",
              "      <td>Ellsworth</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1275</th>\n",
              "      <td>1508.250670</td>\n",
              "      <td>Minnesota</td>\n",
              "      <td>Wilkin</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1214</th>\n",
              "      <td>1493.969585</td>\n",
              "      <td>Nebraska</td>\n",
              "      <td>Antelope</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>287</th>\n",
              "      <td>1470.482082</td>\n",
              "      <td>Colorado</td>\n",
              "      <td>Rio Blanco</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1138</th>\n",
              "      <td>1420.536597</td>\n",
              "      <td>North Dakota</td>\n",
              "      <td>Bottineau</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1540</th>\n",
              "      <td>1373.033510</td>\n",
              "      <td>South Dakota</td>\n",
              "      <td>Bon Homme</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "               APE        STNAME                 CTYNAME\n",
              "1841  49349.630114         Texas                  Loving\n",
              "333   14210.057012      Nebraska                  Banner\n",
              "174   11606.740004         Idaho                   Clark\n",
              "1826  11045.632640  South Dakota                   Jones\n",
              "904    7177.162705  South Dakota                   Sully\n",
              "1804   4529.724327  South Dakota                   Miner\n",
              "617    4336.986454  South Dakota                   Faulk\n",
              "1193   4266.918806  North Dakota                   Burke\n",
              "1755   4263.194355  South Dakota                 Sanborn\n",
              "2185   4166.760118  South Dakota               McPherson\n",
              "1781   4103.652738      Nebraska                 Greeley\n",
              "774    4083.029748  North Dakota                  Kidder\n",
              "1145   3668.578550  North Dakota                McIntosh\n",
              "488    3398.013936        Kansas                 Decatur\n",
              "512    3366.019906  South Dakota                 Douglas\n",
              "1670   3349.659731        Kansas                  Jewell\n",
              "517    3331.150491      Nebraska                   Brown\n",
              "1362   3201.610443        Kansas                    Rush\n",
              "1727   3087.368576        Nevada               Esmeralda\n",
              "1756   3035.669863        Alaska      Petersburg Borough\n",
              "704    3017.516991  South Dakota                 Jackson\n",
              "157    2957.887257        Alaska  Aleutians East Borough\n",
              "773    2921.763368  South Dakota                  Hanson\n",
              "602    2749.259472      Nebraska                 Webster\n",
              "296    2707.818541  South Dakota                   Clark\n",
              "1573   2695.543924      Missouri                  Mercer\n",
              "1471   2632.346927      Colorado                   Kiowa\n",
              "293    2546.583229  North Dakota                 Sargent\n",
              "1079   2543.847742     Minnesota       Lake of the Woods\n",
              "295    2530.931027         Idaho                   Adams\n",
              "119    2518.810024      Missouri                    Knox\n",
              "1315   2459.842573  South Dakota                 Edmunds\n",
              "426    2135.457890  North Dakota                    Dunn\n",
              "2351   2075.104329      New York                Hamilton\n",
              "2126   2017.485671      Nebraska                  Furnas\n",
              "2471   1888.225195         Texas                  Motley\n",
              "257    1875.229877        Kansas                   Rooks\n",
              "1720   1789.508913        Kansas                Phillips\n",
              "1772   1777.374452  North Dakota                  Ransom\n",
              "1354   1737.258173        Kansas              Washington\n",
              "349    1691.262389          Iowa                 Audubon\n",
              "1269   1624.539148  South Dakota                  Hamlin\n",
              "85     1616.726638        Kansas                 Sherman\n",
              "2038   1612.130315  North Dakota                 McHenry\n",
              "1984   1522.789970        Kansas               Ellsworth\n",
              "1275   1508.250670     Minnesota                  Wilkin\n",
              "1214   1493.969585      Nebraska                Antelope\n",
              "287    1470.482082      Colorado              Rio Blanco\n",
              "1138   1420.536597  North Dakota               Bottineau\n",
              "1540   1373.033510  South Dakota               Bon Homme"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 37
        }
      ]
    },
    {
      "metadata": {
        "id": "0Ebr0w4Eqoof",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "#### Removing few outliers in CA and TX states specifically (as seen in the boxplots)"
      ]
    },
    {
      "metadata": {
        "id": "Hn59F9_wS-TU",
        "colab_type": "code",
        "outputId": "7d071841-e659-4353-9ad4-77f75f53556f",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 80
        }
      },
      "cell_type": "code",
      "source": [
        "STFilter[ (STFilter['AE'] > 600000) & (STFilter['STNAME'] == 'California') ]"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>index</th>\n",
              "      <th>Q0</th>\n",
              "      <th>Q1</th>\n",
              "      <th>Q2pt5</th>\n",
              "      <th>Q5</th>\n",
              "      <th>Q10</th>\n",
              "      <th>Q25</th>\n",
              "      <th>Q50</th>\n",
              "      <th>Q75</th>\n",
              "      <th>Q90</th>\n",
              "      <th>Q95</th>\n",
              "      <th>Q97pt5</th>\n",
              "      <th>Q99</th>\n",
              "      <th>Q100</th>\n",
              "      <th>POPESTIMATE2015</th>\n",
              "      <th>prediction</th>\n",
              "      <th>STNAME</th>\n",
              "      <th>CTYNAME</th>\n",
              "      <th>APE</th>\n",
              "      <th>AE</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>27</th>\n",
              "      <td>1153</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1496130</td>\n",
              "      <td>102316.907634</td>\n",
              "      <td>California</td>\n",
              "      <td>Sacramento</td>\n",
              "      <td>93.161229</td>\n",
              "      <td>1.393813e+06</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "    index   Q0   Q1  Q2pt5   Q5  Q10  Q25  Q50  Q75  Q90  Q95  Q97pt5  Q99  \\\n",
              "27   1153  0.0  0.0    0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0     0.0  0.0   \n",
              "\n",
              "    Q100  POPESTIMATE2015     prediction      STNAME     CTYNAME        APE  \\\n",
              "27   0.0          1496130  102316.907634  California  Sacramento  93.161229   \n",
              "\n",
              "              AE  \n",
              "27  1.393813e+06  "
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 38
        }
      ]
    },
    {
      "metadata": {
        "id": "eELd9-kYUZJ8",
        "colab_type": "code",
        "outputId": "883c6826-3e46-42e6-d40e-b8cf1ffe2ace",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 100
        }
      },
      "cell_type": "code",
      "source": [
        "STFilter[ (STFilter['APE'] > 40000) & (STFilter['STNAME'] == 'Texas') ]"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>index</th>\n",
              "      <th>Q0</th>\n",
              "      <th>Q1</th>\n",
              "      <th>Q2pt5</th>\n",
              "      <th>Q5</th>\n",
              "      <th>Q10</th>\n",
              "      <th>Q25</th>\n",
              "      <th>Q50</th>\n",
              "      <th>Q75</th>\n",
              "      <th>Q90</th>\n",
              "      <th>Q95</th>\n",
              "      <th>Q97pt5</th>\n",
              "      <th>Q99</th>\n",
              "      <th>Q100</th>\n",
              "      <th>POPESTIMATE2015</th>\n",
              "      <th>prediction</th>\n",
              "      <th>STNAME</th>\n",
              "      <th>CTYNAME</th>\n",
              "      <th>APE</th>\n",
              "      <th>AE</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>39</th>\n",
              "      <td>1841</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0.26</td>\n",
              "      <td>0.28</td>\n",
              "      <td>0.31</td>\n",
              "      <td>0.36</td>\n",
              "      <td>0.52</td>\n",
              "      <td>0.98</td>\n",
              "      <td>2.15</td>\n",
              "      <td>6.586</td>\n",
              "      <td>21.199</td>\n",
              "      <td>60.435501</td>\n",
              "      <td>124.734998</td>\n",
              "      <td>944.789978</td>\n",
              "      <td>119</td>\n",
              "      <td>58845.059835</td>\n",
              "      <td>Texas</td>\n",
              "      <td>Loving</td>\n",
              "      <td>49349.630114</td>\n",
              "      <td>58726.059835</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "    index   Q0    Q1  Q2pt5    Q5   Q10   Q25   Q50   Q75    Q90     Q95  \\\n",
              "39   1841  0.2  0.26   0.28  0.31  0.36  0.52  0.98  2.15  6.586  21.199   \n",
              "\n",
              "       Q97pt5         Q99        Q100  POPESTIMATE2015    prediction STNAME  \\\n",
              "39  60.435501  124.734998  944.789978              119  58845.059835  Texas   \n",
              "\n",
              "   CTYNAME           APE            AE  \n",
              "39  Loving  49349.630114  58726.059835  "
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 39
        }
      ]
    },
    {
      "metadata": {
        "id": "A30ftkg7UjlI",
        "colab_type": "code",
        "colab": {}
      },
      "cell_type": "code",
      "source": [
        "STFilter.drop(STFilter.index[[27, 39]], inplace=True)    #removing these two outliers"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "metadata": {
        "id": "kM5WAXpJsIYZ",
        "colab_type": "code",
        "outputId": "02b5f1f1-576c-47ea-c93d-b93cf223467f",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 459
        }
      },
      "cell_type": "code",
      "source": [
        "fig, (ax1, ax2, ax3) = plt.subplots(1, 3, figsize=(20,7))\n",
        "\n",
        "sns.boxplot(x='STNAME', y=\"APE\", data=STFilter[ STFilter['STNAME'] == 'Texas' ], ax=ax1, palette=\"Blues\")\n",
        "sns.boxplot(x='STNAME', y=\"APE\", data=STFilter[ STFilter['STNAME'] == 'California' ], ax=ax2, palette=\"Greens\")\n",
        "sns.boxplot(x='STNAME', y=\"APE\", data=STFilter[ STFilter['STNAME'] == 'Florida' ], ax=ax3, palette=\"Reds\")"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7fc4950a7a20>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 41
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\nAACKplQCAAAAoGhKJQAAAACKplQCAAAAoGhKJQAAAACKplQCoEdZs2ZNzjnnnCxZsiRJsnHjxsyY\nMSMNDQ259tprs2vXriTJsmXLcskll2Tq1Kl56qmnShkZAAD6JaUSAD1GW1tb7rzzzowZM6bj2gMP\nPJCGhoZ8//vfz0c/+tE0Njamra0tCxcuzOOPP54nn3wyTzzxRLZs2VLC5AAA0P8olQDoMaqrq7No\n0aLU19d3XGtqasrZZ5+dJBk/fnxWrlyZV155JSNHjkxtbW0GDBiQ0aNHp7m5uVSxAQCgX6rs7m94\n99135ze/+U327NmTr33ta/nHf/zH/O53v8ugQYOSJDNnzsxZZ52VZcuW5Yknnkh5eXmmTZuWqVOn\ndndUALpZZWVlKivfOZp27NiR6urqJMmQIUNSKBTS0tKSurq6jtfU1dWlUCi85+cPHlyTysqKwxsa\nAAD6qW4tlV566aW8+uqrWbp0aVpbWzNlypScccYZuf766zN+/PiO1729raGxsTFVVVW59NJLM3Hi\nxI7iCYD+qb29vajr79ba2nY44wD0GUOH1pY6AgC9ULdufzv99NPzne98J0kycODA7NixI3v37j3g\ndbY1APC2mpqa7Ny5M0myadOm1NfXp76+Pi0tLR2v2bx58zu2zAEAAF2vW1cqVVRUpKamJknS2NiY\nM888MxUVFVmyZEkWL16cIUOG5NZbb7WtgV6vvLwsid/6weEwduzYLF++PBdddFFWrFiRcePGZdSo\nUbnllluybdu2VFRUpLm5OTfffHOpowIAQL/S7WcqJcnPf/7zNDY25rHHHsvq1aszaNCgDB8+PI88\n8kgeeuihnHrqqe94vW0N9Db79u3/d7ZQ2F7iJLBfbyk4V69enbvuuisbNmxIZWVlli9fnm9/+9uZ\nN29eli5dmmOPPTaTJ09OVVVV5syZk5kzZ6asrCzXXHNNamt7x58RAAD6im4vlV588cU8/PDDefTR\nR1NbW/uO20ZPmDAht99+e84999wDtjWccsop3R0VgG42YsSIPPnkkwdcX7x48QHXJk2alEmTJnVH\nLAAA4CC69Uyl7du35+677873vve9jkO3Z8+enfXr1yfZf9voYcOGZdSoUVm1alW2bduWN998M83N\nzTnttNO6MyoAAAAAh9CtK5WeffbZtLa25rrrruu4dvHFF+e6667LEUcckZqamsyfPz8DBgywrQEA\n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\nAAAAAAAA4DRCJQAAAAAAADiNUAkAAAAAAABOM9hsNpurJwEAAAAAAIB7CzuVAAAAAAAA4DRCJQAA\nAAAAADiNUAkAAAAAAABOI1QCAAAAAACA0wiVAAAAAAAA4DRCJQAAAAAAADiNUAkAAAAAAABOc3f1\nBIDOLisrS6dOndKlS5dksVgUEBCg3r17a8OGDa6eGgCgA507d05vvPGG/v77b7W0tCg0NFQrVqxQ\nt27dWp2bkpKiKVOmyM3NTZWVlYqNjdWaNWt0/Phxmc1m9erVq11zSExM1KZNm253KQCADlJZWakZ\nM2YoJCTE3lZXV6fAwEDl5OTctH95ebmKi4u1ePFih/bFixcrLi5Oo0aNuuNzBpxBqATcREpKiiSp\nqKhIp0+f1ooVK1w8IwBAR2tublZSUpJWrlypiIgI2Ww2rV27Vhs3btTLL798w37jxo2z/7ukpESf\nfvppuwMlSQRKAHAPGjx4sMxms/24tLRU+fn5t9R3+PDhGj58+N2aGnDbCJWAdsrOztaJEyfU3Nys\nefPmadq0aZo3b55SUlL0yCOP6LnnnlNycrLc3d2VkZEhd3d3ubm5KScnRz169FBycrKqq6tltVq1\nZMkSRUVFuXpJAIAb+P777zVkyBBFRERIkgwGg5YtWyaj0ajMzEz99NNPamho0Ny5czVr1ix7v//d\nkPDx8VFVVZVeeuklvffee9q0aZPKysrU3NysuLg4RUdHy2QyadiwYZKkPn366MqVKzp79qwuXLig\n1NRUjR8/XqNGjVJpaal++OEHrV+/Xh4eHvL29ta777573R1TAIDObe/evdq6davc3NwUHBystLQ0\n5ebmqqKiQpWVlUpKSlJhYaFycnKUl5enL774QgMGDFB9fb0k6c8//9SyZcskSU1NTXrzzTcVEBDg\nyiWhi+GdSkA7HDlyRNXV1crPz9fWrVu1ceNGWa1Wpaena926dSouLtbgwYM1YsQIVVdXa9WqVTKb\nzRoxYoT27Nmj8vJyXb16Vfn5+crLy1NdXZ2rlwQAaMOZM2da3Snu3r27bDabBg4cqMLCQhUUFGj9\n+vXX7Z+QkKB+/fopLy9Pv/zyi06fPq2PPvpIH374oTZs2GC/OBg2bJjS09MlXbtQyMvL06uvvqrt\n27c7jFdbW6t169Zp27Zt6tWrlw4dOnQXVg0AuJuuXr2qd955Rx988IEKCwtVWVmpI0eOSJIaGxtV\n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\nL0by8A14x/NOAAAAAElFTkSuQmCC\n",
            "text/plain": [
              "<Figure size 1440x504 with 3 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "metadata": {
        "id": "vLjkl18aujwa",
        "colab_type": "code",
        "outputId": "2f166111-2ad8-4be9-fb2d-4601a63aad5a",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 460
        }
      },
      "cell_type": "code",
      "source": [
        "fig, (ax1, ax2, ax3) = plt.subplots(1, 3, figsize=(20,7))\n",
        "\n",
        "sns.boxplot(x='STNAME', y=\"AE\", data=STFilter[ STFilter['STNAME'] == 'Texas' ], ax=ax1, palette=\"Blues\")\n",
        "sns.boxplot(x='STNAME', y=\"AE\", data=STFilter[ STFilter['STNAME'] == 'California' ], ax=ax2, palette=\"Greens\")\n",
        "sns.boxplot(x='STNAME', y=\"AE\", data=STFilter[ STFilter['STNAME'] == 'Florida' ], ax=ax3, palette=\"Reds\")"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7fc4927daa20>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 42
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\npKQzhJIkSZIkSVLSGUJJkiRJkiQp6QyhJEmSJEmSlHSGUJIkSZIkSUo6QyhJkiRJkiQlnSGUJCll\nDh8+zD333MPmzZsBOHLkCAsWLKCyspJHHnmEvr4+AHbs2MGDDz5IRUUFr776KgD9/f1UV1czf/58\nqqqqaGtrA+DQoUPMmzePefPmsWLFisR7bdiwgTlz5lBRUUFTU9MIr1SSJElSMNUFSJLGpt7eXlau\nXMn06dMTY2vXrqWyspIvfvGLPP/882zfvp0HHniAdevWsX37djIyMpgzZw7l5eU0NjaSnZ1NfX09\nb775JvX19axZs4ZVq1ZRU1NDYWEh1dXVNDU1kZ+fz86dO9m6dSs9PT1UVlYyc+ZM0tPTU/gvIEmS\nPo3/+T//jgMHfpHqMlKut7cXgMzMzBRXklqTJ9/Ol770lVSXoU/gnVCSpJQIhUKsX7+eSCSSGGtu\nbubuu+8GoKysjGg0yv79+5k8eTJZWVmMGzeOKVOm0NLSQjQapby8HICSkhJaWlro6+ujvb2dwv+/\nvXsPjrq6/z/+2t3sEiNJIDFRkZsYRAokQrnYYBC8xtSOkRYCSKgtVKGA0KKQb74Qg1wSuUzL7SsC\nCkwgIW2kSiklICLVEmIxiuDACF6Qy5Ts0lwICWST3d8f/Ng2DeEmn3w25PmYcTQn53PyPg6Tw+e1\n53w+0dF1xigsLFRcXJwcDofCwsJ011136ciRI40/aQAAgBvM7a6W211tdhnAVWEnFADAFAEBAQoI\nqLsMVVVVyeFwSJLCw8PldDrlcrkUFhbm6xMWFlav3Wq1ymKxyOVyKSQkxNf34hitWrW65BhdunRp\nsL7WrYMUEGDeTimbjc+JANRns1kVERFsdhmAX/jxj59m54ukzMyZkqSUlFeu0BMwHyEUAMAveb3e\n791+rWP8p5KSyiv2MVJtrcfUnw/AP9XWeuR0njG1BkIwAMD14mNWAIDfCAoK0rlz5yRJp06dUmRk\npCIjI+VyuXx9iouLfe1Op1PShYeUe71eRUREqLS01Ne3oTEutgMAAABoPIRQAAC/ERsbq/z8fEnS\ntm3bFBcXp5iYGO3fv1/l5eU6e/asioqK1Lt3b/Xv319bt26VJO3cuVP9+vWT3W5Xp06dtHfv3jpj\nPPDAA/rggw9UXV2tU6dOqbi4WFFRUabNEwAAAGiOOI4HADDFgQMH9Nprr+nEiRMKCAhQfn6+FixY\n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\nA2hmUuLSYHq9AAAAAElFTkSuQmCC\n",
            "text/plain": [
              "<Figure size 1440x504 with 3 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "metadata": {
        "id": "4ztr9IlfFSfg",
        "colab_type": "code",
        "outputId": "16cacebb-b45d-4cba-e794-bf8ab69f180a",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 80
        }
      },
      "cell_type": "code",
      "source": [
        "# Outliers\n",
        "STFilter[ (STFilter['AE'] > 200000) & (STFilter['STNAME'] == 'California') ]"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>index</th>\n",
              "      <th>Q0</th>\n",
              "      <th>Q1</th>\n",
              "      <th>Q2pt5</th>\n",
              "      <th>Q5</th>\n",
              "      <th>Q10</th>\n",
              "      <th>Q25</th>\n",
              "      <th>Q50</th>\n",
              "      <th>Q75</th>\n",
              "      <th>Q90</th>\n",
              "      <th>Q95</th>\n",
              "      <th>Q97pt5</th>\n",
              "      <th>Q99</th>\n",
              "      <th>Q100</th>\n",
              "      <th>POPESTIMATE2015</th>\n",
              "      <th>prediction</th>\n",
              "      <th>STNAME</th>\n",
              "      <th>CTYNAME</th>\n",
              "      <th>APE</th>\n",
              "      <th>AE</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>25</th>\n",
              "      <td>1075</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>434751</td>\n",
              "      <td>102316.907634</td>\n",
              "      <td>California</td>\n",
              "      <td>Solano</td>\n",
              "      <td>76.4654</td>\n",
              "      <td>332434.092366</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "    index   Q0   Q1  Q2pt5   Q5  Q10  Q25  Q50  Q75  Q90  Q95  Q97pt5  Q99  \\\n",
              "25   1075  0.0  0.0    0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0     0.0  0.0   \n",
              "\n",
              "    Q100  POPESTIMATE2015     prediction      STNAME CTYNAME      APE  \\\n",
              "25   0.0           434751  102316.907634  California  Solano  76.4654   \n",
              "\n",
              "               AE  \n",
              "25  332434.092366  "
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 46
        }
      ]
    },
    {
      "metadata": {
        "id": "ZvXCddcEFTxr",
        "colab_type": "code",
        "outputId": "c2b34120-dfe9-40cf-b10c-bd85bc26ca0c",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 100
        }
      },
      "cell_type": "code",
      "source": [
        "STFilter[ (STFilter['AE'] > 100000) & (STFilter['STNAME'] == 'Florida') ]"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>index</th>\n",
              "      <th>Q0</th>\n",
              "      <th>Q1</th>\n",
              "      <th>Q2pt5</th>\n",
              "      <th>Q5</th>\n",
              "      <th>Q10</th>\n",
              "      <th>Q25</th>\n",
              "      <th>Q50</th>\n",
              "      <th>Q75</th>\n",
              "      <th>Q90</th>\n",
              "      <th>Q95</th>\n",
              "      <th>Q97pt5</th>\n",
              "      <th>Q99</th>\n",
              "      <th>Q100</th>\n",
              "      <th>POPESTIMATE2015</th>\n",
              "      <th>prediction</th>\n",
              "      <th>STNAME</th>\n",
              "      <th>CTYNAME</th>\n",
              "      <th>APE</th>\n",
              "      <th>AE</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>502</td>\n",
              "      <td>0.16</td>\n",
              "      <td>0.25</td>\n",
              "      <td>0.28</td>\n",
              "      <td>0.31</td>\n",
              "      <td>0.37</td>\n",
              "      <td>0.92</td>\n",
              "      <td>6.25</td>\n",
              "      <td>20.290001</td>\n",
              "      <td>38.884001</td>\n",
              "      <td>53.581002</td>\n",
              "      <td>70.973001</td>\n",
              "      <td>96.663402</td>\n",
              "      <td>257.149994</td>\n",
              "      <td>1292008</td>\n",
              "      <td>1.106496e+06</td>\n",
              "      <td>Florida</td>\n",
              "      <td>Orange</td>\n",
              "      <td>14.3584</td>\n",
              "      <td>185511.673534</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "    index    Q0    Q1  Q2pt5    Q5   Q10   Q25   Q50        Q75        Q90  \\\n",
              "10    502  0.16  0.25   0.28  0.31  0.37  0.92  6.25  20.290001  38.884001   \n",
              "\n",
              "          Q95     Q97pt5        Q99        Q100  POPESTIMATE2015  \\\n",
              "10  53.581002  70.973001  96.663402  257.149994          1292008   \n",
              "\n",
              "      prediction   STNAME CTYNAME      APE             AE  \n",
              "10  1.106496e+06  Florida  Orange  14.3584  185511.673534  "
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 47
        }
      ]
    },
    {
      "metadata": {
        "id": "2ah78UVsFeGX",
        "colab_type": "code",
        "outputId": "b2994baa-fe6e-4bd3-f765-3e2ea33af0e2",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 162
        }
      },
      "cell_type": "code",
      "source": [
        "STFilter[ (STFilter['AE'] > 50000) & (STFilter['STNAME'] == 'Texas') ]"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>index</th>\n",
              "      <th>Q0</th>\n",
              "      <th>Q1</th>\n",
              "      <th>Q2pt5</th>\n",
              "      <th>Q5</th>\n",
              "      <th>Q10</th>\n",
              "      <th>Q25</th>\n",
              "      <th>Q50</th>\n",
              "      <th>Q75</th>\n",
              "      <th>Q90</th>\n",
              "      <th>Q95</th>\n",
              "      <th>Q97pt5</th>\n",
              "      <th>Q99</th>\n",
              "      <th>Q100</th>\n",
              "      <th>POPESTIMATE2015</th>\n",
              "      <th>prediction</th>\n",
              "      <th>STNAME</th>\n",
              "      <th>CTYNAME</th>\n",
              "      <th>APE</th>\n",
              "      <th>AE</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>33</th>\n",
              "      <td>1607</td>\n",
              "      <td>0.48</td>\n",
              "      <td>0.6019</td>\n",
              "      <td>0.66</td>\n",
              "      <td>0.72</td>\n",
              "      <td>0.91</td>\n",
              "      <td>1.45</td>\n",
              "      <td>2.51</td>\n",
              "      <td>5.4225</td>\n",
              "      <td>12.455000</td>\n",
              "      <td>23.550499</td>\n",
              "      <td>37.025250</td>\n",
              "      <td>72.463499</td>\n",
              "      <td>163.529999</td>\n",
              "      <td>90121</td>\n",
              "      <td>2.054010e+05</td>\n",
              "      <td>Texas</td>\n",
              "      <td>Rockwall</td>\n",
              "      <td>127.916879</td>\n",
              "      <td>115279.970431</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>37</th>\n",
              "      <td>1700</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.02</td>\n",
              "      <td>0.06</td>\n",
              "      <td>0.13</td>\n",
              "      <td>0.2000</td>\n",
              "      <td>0.450000</td>\n",
              "      <td>1.120000</td>\n",
              "      <td>3.491250</td>\n",
              "      <td>12.168000</td>\n",
              "      <td>134.080002</td>\n",
              "      <td>21781</td>\n",
              "      <td>8.014262e+04</td>\n",
              "      <td>Texas</td>\n",
              "      <td>Hutchinson</td>\n",
              "      <td>267.947394</td>\n",
              "      <td>58361.621967</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>51</th>\n",
              "      <td>2429</td>\n",
              "      <td>0.52</td>\n",
              "      <td>0.8500</td>\n",
              "      <td>1.20</td>\n",
              "      <td>1.63</td>\n",
              "      <td>2.40</td>\n",
              "      <td>6.16</td>\n",
              "      <td>17.40</td>\n",
              "      <td>31.2600</td>\n",
              "      <td>53.859999</td>\n",
              "      <td>72.239999</td>\n",
              "      <td>92.257999</td>\n",
              "      <td>122.608401</td>\n",
              "      <td>340.549988</td>\n",
              "      <td>1983642</td>\n",
              "      <td>1.926913e+06</td>\n",
              "      <td>Texas</td>\n",
              "      <td>Tarrant</td>\n",
              "      <td>2.859845</td>\n",
              "      <td>56729.093016</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "    index    Q0      Q1  Q2pt5    Q5   Q10   Q25    Q50      Q75        Q90  \\\n",
              "33   1607  0.48  0.6019   0.66  0.72  0.91  1.45   2.51   5.4225  12.455000   \n",
              "37   1700  0.00  0.0000   0.00  0.00  0.02  0.06   0.13   0.2000   0.450000   \n",
              "51   2429  0.52  0.8500   1.20  1.63  2.40  6.16  17.40  31.2600  53.859999   \n",
              "\n",
              "          Q95     Q97pt5         Q99        Q100  POPESTIMATE2015  \\\n",
              "33  23.550499  37.025250   72.463499  163.529999            90121   \n",
              "37   1.120000   3.491250   12.168000  134.080002            21781   \n",
              "51  72.239999  92.257999  122.608401  340.549988          1983642   \n",
              "\n",
              "      prediction STNAME     CTYNAME         APE             AE  \n",
              "33  2.054010e+05  Texas    Rockwall  127.916879  115279.970431  \n",
              "37  8.014262e+04  Texas  Hutchinson  267.947394   58361.621967  \n",
              "51  1.926913e+06  Texas     Tarrant    2.859845   56729.093016  "
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 48
        }
      ]
    }
  ]
}